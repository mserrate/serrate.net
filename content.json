{"meta":{"title":"Marçal Serrate","subtitle":null,"description":null,"author":"Marçal Serrate","url":"http://www.serrate.net"},"pages":[{"title":"About","date":"2017-07-02T16:57:03.000Z","updated":"2017-07-02T16:57:03.000Z","comments":false,"path":"about/index.html","permalink":"http://www.serrate.net/about/index.html","excerpt":"","text":"My name is Marçal Serrate and I’m a technical architect specialized in enterprise solutions and software design. I have been working on national and international projects applying SOA, EDA, DDD, CQRS and NoSQL on the .NET &amp; JVM platforms. I also enjoy working on BigData technologies such as Storm, Kafka, Hadoop &amp; Cassandra. I’ve been performing the Udi Dahan’s Enterprise Development with NServiceBus workshop several times in the past."},{"title":"Events","date":"2017-07-02T16:57:55.000Z","updated":"2017-07-02T16:57:55.000Z","comments":false,"path":"events/index.html","permalink":"http://www.serrate.net/events/index.html","excerpt":"","text":"Here is where I will be speaking along with my speaking history and other event participation. Upcoming EventsPast Events Actor model with Akka.netCatDotNet | May, 2015 Complex Event Processing with Event StoreMicrosoft DotNetSpain Conference | Feb, 2015 NoSQL with RavenDBBarcelona Developers Conference | Dec, 2012 DDD, SOA, ESB&#8230; Help!Barcelona Developers Conference | Dec, 2012 SOA, DDD &amp; CQRS with NServiceBus (Part 2)Webcast, SecondNug | Nov, 2012 Introduction to SOA with NServiceBus (Part 1)Webcast, SecondNug | Sep, 2012 Distributed Systems with NServiceBusBarcelona, IASA | May, 2012 Distributed Systems with NServiceBusMicrosoft Madrid, IASA | Apr, 2012 Command and Query Responsibility Segregation (CQRS)Webcast, SecondNug | May, 2012 Practical ASP.NET MVC 3Barcelona, CatDotNet | Feb, 2011 First Steps with CSLA.NETWebcast, SecondNug | May, 2008"},{"title":"","date":"2018-07-02T21:32:42.265Z","updated":"2018-07-02T21:32:42.264Z","comments":true,"path":"files/shareaholic/index.html","permalink":"http://www.serrate.net/files/shareaholic/index.html","excerpt":"","text":"Redirecting you now..."},{"title":"","date":"2018-07-02T21:32:42.276Z","updated":"2018-07-02T21:32:42.275Z","comments":true,"path":"files/shareaholic/spritegen/index.html","permalink":"http://www.serrate.net/files/shareaholic/spritegen/index.html","excerpt":"","text":"Redirecting you now..."},{"title":"","date":"2018-07-02T21:32:42.280Z","updated":"2018-07-02T21:32:42.279Z","comments":true,"path":"files/shareaholic/spritegen/jquery.shareaholic-publishers-sb.min.js","permalink":"http://www.serrate.net/files/shareaholic/spritegen/jquery.shareaholic-publishers-sb.min.js","excerpt":"","text":"/* Copyright (c) Shareaholic Inc (www.shareaholic.com). All rights reserved. */ \"undefined\"==typeof SHR4P&&(SHR4P={});\"undefined\"==typeof SHR&&(SHR={});SHR.enforceSSL=!0;\"undefined\"==typeof SHRSB_Globals&&(window.SHRSB_Globals={});\"undefined\"==typeof SHRSB_Globals.perfoption&&(SHRSB_Globals.perfoption=\"1\");\"undefined\"==typeof SHRSB_Globals.minJQueryVersion&&(SHRSB_Globals.minJQueryVersion=\"1.5.2\");SHR4P.host=\"undefined\"!==typeof SHR.debug_enabled?\"www.spreadaholic.com\":\"www.shareaholic.com\";SHR4P.base_url=(SHR.enforceSSL?\"https:\":document.location.protocol)+\"//\"+SHR4P.host; SHR4P.cdn_url=SHR.enforceSSL||\"https:\"==document.location.protocol?\"https://dtym7iokkjlif.cloudfront.net\":\"http://cdn.shareaholic.com\";SHR4P.cdn_url=\"undefined\"!==typeof SHR.debug_enabled?SHR4P.base_url:SHR4P.cdn_url;SHR4P.shr_twitter_image=SHR4P.cdn_url+\"/media/images/styles/tb/twitter.png\";SHR4P.shr_twitter_template=\"${title} - ${short_link} via @Shareaholic\";\"undefined\"!=typeof SHRSB_Settings&&\"undefined\"!=typeof SHRSB_Settings.twitter_template&&(SHR4P.shr_twitter_template=SHRSB_Settings.twitter_template); \"undefined\"!=typeof SHRSB_Globals&&\"undefined\"!=typeof SHRSB_Globals.twitter_template&&(SHR4P.shr_twitter_template=SHRSB_Globals.twitter_template);\"undefined\"!=typeof SHRSB_Globals&&\"undefined\"!=typeof SHRSB_Globals.src&&(SHR4P.shr_image=SHRSB_Globals.src+\"/shareaholic-publishers-mini.png\"); var SHR4P_init=function(){SHR4P.debug(\"SHR4P_init called\");if(SHR4P.init)SHR4P.debug(\"SHR4P_init returning because already loaded\");else{SHR4P.init=true;SHR4P.jQuery=typeof sb_dont_noConflict!=\"undefined\"&&sb_dont_noConflict?jQuery:jQuery.noConflict(true);SHR4P.debug(\"jquery version: \"+SHR4P.jQuery().jquery);var b=SHR4P.jQuery;SHR4P.debug(\"initializing shareaholic_publishers plugin\");b.fn.shareaholic_publishers=function(c){var a=b.extend({v:1,src:SHR4P.base_url,mode:\"inject\",service:\"\",apikey:\"\", link:\"\",title:\"\",notes:\"\",expand:true,duration:400,rel:\"nofollow\",target:\"_blank\",twitter_template:\"${title} - ${short_link} via @Shareaholic\",dontShowShareCount:false,fbLikeButton:false,fbButtonPos:\"bottom-right\",tags:\"\",allowExternalTags:true,designer_toolTips:false,tip_bg_color:\"black\",tip_text_color:\"white\",category:\"\",ctype:\"\",short_link:\"\",shortener:\"google\",shortener_key:\"\",custom_link:{},bgimg:\"\",bgimg_padding:\"0 0 0 0\",center:false,spaced:false,iframe_src:\"/publishers\",spriteimg:\"\",share_src:SHR4P.base_url, localize:false,li_margin:0,\"margin-top\":20,\"margin-bottom\":20,\"margin-left\":0,\"bgimg-padding-top\":0,\"bgimg-padding-left\":0,\"icon-width\":60,\"icon-height\":29,\"icon-margin-top\":3,\"promo-height\":c.shrlink?18:0,shrlink:false,twitter_overlay:true},c);b(this);SHR4P.debug(\"$.fn.shareaholic_publishers called\");SHR4P.debug(a);b.browser.msie&&b.browser.version-1){SHR4P.debug(\"found! adding img_group\"); b.merge(m,a);return false}});SHR4P.debug(\"req_services so far: \");SHR4P.debug(m)});SHR4P.debug(\"final req_services: \");m=m.sort(g);SHR4P.debug(m.join(\",\"));c=f(a.src+a.api.sprite.url,{v:a.api.sprite.v,apikey:a.apikey,apitype:\"png\",service:m.join(\",\")})}e.append(b('ul.shr-socials li.shareaholic{background-image:url('+c+\") !important;}\"));e.appendTo(this);return this};b.extend({getBrowser:function(){var b=navigator.userAgent,a=\"\";b.indexOf(\"MSIE\")!=-1?a=\"Internet Explorer\": b.indexOf(\"Firefox\")!=-1?a=\"Firefox\":b.indexOf(\"Flock\")!=-1?a=\"Flock\":b.indexOf(\"Chrome\")!=-1?a=\"Google Chrome\":b.indexOf(\"Safari\")!=-1?a=\"Safari\":b.indexOf(\"Opera\")!=-1?a=\"Opera\":b.indexOf(\"Songbird\")!=-1&&(a=\"Songbird\");return a}});SHR4P.ready=true;if(typeof SHR4P.onready!=\"undefined\")SHR4P.onready()}};\"undefined\"==typeof SHR4P&&(SHR4P={});SHR4P.ready=!1;SHR4P.init=!1; SHR4P.params=function(){var b={},c=document.location.href.split(\"?\");if(c.length==2)for(var c=c[1].split(\"&\"),a=0;a0){c=a[0].total_count;c!=0&&c>1E3&&(c=Math.floor(c/1E3)+\"K\")}b({count:c})})}},getTwitShrCnt:function(a,b){if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){a=\"https://cdn.api.twitter.com/1/urls/count.json?url=\"+encodeURIComponent(a);SHR4P.jQuery.getJSON(a+\"&callback=?\",function(a){a=a.count;a!= 0&&a>1E3&&(a=Math.floor(a/1E3)+\"K\");b({count:a})})}},getDeliciousShrCnt:function(a,b){if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){a=\"http://feeds.delicious.com/v2/json/urlinfo/data?url=\"+encodeURIComponent(a);SHR4P.jQuery.getJSON(a+\"&callback=?\",function(a){var c=0;if(a.length>0){c=a[0].total_posts;c!=0&&c>1E3&&(c=Math.floor(c/1E3)+\"K\")}b({count:c})})}},getGenericShrCnt:function(a,b,c,d,g,f){if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){if(c==1)if(g== 1)a=\"https://\"+d+encodeURIComponent(a);else var a=encodeURIComponent(\"http://\"+d+a+\"&callback=?\"),n=\"url=\"+a+\"&src=\"+f,a=\"https://www.shareaholic.com/getshrcount?\";else a=\"http://\"+d+encodeURIComponent(a)+\"&callback=?\";SHR4P.jQuery.ajax({url:a,type:\"GET\",dataType:\"jsonp\",data:n,cache:false,success:function(a){if(f==\"ln\"||f==\"tw\"||f==\"pt\")var c=a.count;else if(f==\"fb\"||f==\"dl\"){c=0;if(a.length>0)if(f==\"fb\")c=a[0].total_count;else if(f==\"dl\")c=a[0].total_posts}c!=0&&c>1E3&&(c=Math.floor(c/1E3)+\"K\"); b({count:c})}})}},getTags:function(a,b,c){if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){var d=1,g=function(a){b=b+a;--d==0&&c(b)};\"https:\"!=document.location.protocol&&SHR4P.utils.getDeliciousTag(a,g)}},getDeliciousTag:function(a,b){if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){a=\"http://feeds.delicious.com/v2/json/urlinfo/data?url=\"+encodeURIComponent(a);SHR4P.jQuery.getJSON(a+\"&callback=?\",function(a){if(a.length>0){top_tags=a[0].top_tags;del_tags=\"\"; SHR4P.jQuery.each(top_tags,function(a,b){del_tags=del_tags+(encodeURIComponent(a)+\"|\"+b+\"|delicious,\")});del_tags!=\"\"&&(del_tags=del_tags.substr(0,del_tags.length-1));b(del_tags)}})}},showServiceLet:function(a,d){if(typeof d!=\"undefined\"&&d){if(typeof SHR_config==\"undefined\"||!SHR_config)window.SHR_config={};b.__shr_service=d;b.__shr_log=true;b.__shr_center=true;SHR_config.shortener=a.shortener?a.shortener:\"google\";SHR_config.shortener_key=a.shortener_key?a.shortener_key:\"\";SHR_config.apikey=a.apikey? a.apikey:\"0747414f47c2b684cf5480c36b2478689\";SHR_config.twitter_template=a.twitter_template?a.twitter_template:\"${title} - ${short_link}\";SHR_config.link=a.link?a.link:c.location.href;SHR_config.title=a.title?a.title:a.link?\"\":c.title;SHR_config.short_link=a.short_link?a.short_link:\"\";b.SHR&&b.SHR.Servicelet?SHR.Servicelet.show():f({src:(a.share_src?a.share_src:SHR4P.cdn_url)+\"/media/js/servicelet.min.js\",cache:true,id:\"shr-servicelet\"})}},isMobileBrowser:function(){var a=navigator.userAgent||navigator.vendor|| window.opera;return/android|avantgo|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|e\\-|e\\/|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\\-|2|g)|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))},getBrowserLocale:function(){if(typeof SHRSB_Globals!=\"undefined\"&&typeof SHRSB_Globals.locale!=\"undefined\")var a=SHRSB_Globals.locale;else{a=\"en-us\";if(navigator)if(navigator.language)a=navigator.language;else if(navigator.browserLanguage)a=navigator.browserLanguage;else if(navigator.systemLanguage)a=navigator.systemLanguage;else if(navigator.userLanguage)a=navigator.userLanguage}return a.toLowerCase()},trackAction:function(a){var b=a.apikey||\"73868baef9de9b15b8cff648e686124de\";SHR4P.jQuery(\"\").attr({src:\"//www.shareaholic.com/api/share/?v=1&apikey=\"+ b+\"&apitype=3&service=\"+a.serviceId+\"&link=\"+encodeURIComponent(a.href)+(a.title!==\"\"?\"&title=\"+a.title:\"\"),width:\"1\",height:\"1\"}).appendTo(\"body\")}}}(window,document); SHR4P.ga=function(){function b(b){!a&&c();if(!d)return false;var f=b.serviceAction||\"unknown\",k=typeof e[f]!==\"undefined\"?e[f]:true,l=b.link,b=g+(SHR4P.tooltips_suffix[b.serviceId]||\"\"),b=b.replace(/(\\s|\\r\\n|\\n|\\r)/gm,\"_\"),f=f.charAt(0).toUpperCase()+f.slice(1);k&&_gaq.push([h+\"_trackSocial\",b,f,l]);return k}function c(){if(typeof _gaq==\"undefined\"||!_gaq)window._gaq=[];_gaq.push([\"shr._setAccount\",\"UA-12964573-5\"],[\"shr._trackPageview\"]);if(typeof SHRSB_Globals!==\"undefined\"){(f=SHRSB_Globals.pubGaKey|| false)&&(h=\"shrpub.\");d=typeof SHRSB_Globals.pubGaSocial!==\"undefined\"?SHRSB_Globals.pubGaSocial:d;f&&d&&_gaq.push([h+\"_setAccount\",f])}a=true;if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){var b=document.createElement(\"script\");b.type=\"text/javascript\";b.async=true;b.src=(\"https:\"==document.location.protocol?\"https://ssl\":\"http://www\")+\".google-analytics.com/ga.js\";var c=document.getElementsByTagName(\"script\")[0];c.parentNode.insertBefore(b,c)}}var a=false,f,d=true,g=\"Shareaholic_\", e={render:false,like:true,unlike:true,send:true,share:true,unknown:false},h=\"\";return{init:c,socialAction:b,trackAction:function(a){b(a.data)}}}(); SHR4P.dough=SHR4P.dough||function(b,c){return function(){if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){var a;if(!(a=b.SHR_Load_Dough)){a=c.createElement(\"script\");a.type=\"text/javascript\";a.async=true;a.src=(\"https:\"==document.location.protocol?\"https://\":\"http://\")+\"dtym7iokkjlif.cloudfront.net/dough/1.0/recipe.js\";var f=c.getElementsByTagName(\"script\")[0];f.parentNode.insertBefore(a,f);a=true}b.SHR_Load_Dough=a}}}(window,document); SHR4P.prefetch=function(){if(typeof SHRSB_Globals!=\"undefined\"&&typeof SHRSB_Globals.src!=\"undefined\")(new Image).src=SHRSB_Globals.src+\"/sprite.png\"}; SHR4P.renderLikeButtons=function(){SHR4P.jQuery(\".shareaholic-fblike,.shareaholic-fbsend\",\".shareaholic-like-buttonset\").length>0&&setTimeout(\"SHR4P.fbUtil.addFBConnect()\",0);SHR4P.jQuery(\".shareaholic-googleplusone\",\".shareaholic-like-buttonset\").length>0&&setTimeout(\"SHR4P.googPlusOneUtil.addGoogScript()\",0);SHR4P.jQuery(\".shareaholic-tweetbutton\",\".shareaholic-like-buttonset\").length>0&&setTimeout(\"SHR4P.twitterUtil.addTwitterScript()\",0)}; SHR4P.googPlusOneUtil={addGoogScript:function(){if(SHR4P.jQuery(\"#googplusonescript\").length==0){var b=document.createElement(\"script\");b.async=true;b.src=\"https://apis.google.com/js/plusone.js\";b.id=\"googplusonescript\";b.text='{\"parsetags\": \"explicit\"}';document.getElementsByTagName(\"head\")[0].appendChild(b);b.onreadystatechange=function(){(this.readyState==\"complete\"||this.readyState==\"loaded\")&&SHR4P.googPlusOneUtil.renderPlusOnes()};b.onload=SHR4P.googPlusOneUtil.renderPlusOnes}},renderPlusOnes:function(){SHR4P.jQuery(\".shareaholic-googleplusone\", \".shareaholic-like-buttonset\").each(function(){var b=SHR4P.jQuery(this);if((b.attr(\"data-shr_status\")||false)!=\"1\"){var c=b.attr(\"data-shr_href\")||b.attr(\"shr_href\"),a=b.attr(\"data-shr_title\")||b.attr(\"shr_title\"),f=b.attr(\"data-shr_size\")||b.attr(\"shr_size\"),d=b.attr(\"data-shr_count\")||b.attr(\"shr_count\"),g=b.attr(\"data-shr_annotation\"),e=b.attr(\"data-shr_width\"),h=b.attr(\"data-shr_expandto\"),j=b.attr(\"data-shr_onstartinteraction\"),i=b.attr(\"data-shr_onendinteraction\");if(typeof d==\"undefined\"|| !d)d=\"true\";if((typeof c==\"undefined\"||!c)&&(typeof a==\"undefined\"||!a)){c=encodeURIComponent(document.location.href);a=document.title}else{if(typeof c==\"undefined\"||!c)c=encodeURIComponent(document.location.href);if(typeof a==\"undefined\"||!a)a=\"\"}if(typeof f==\"undefined\"||!f)f=\"standard\";if(typeof g==\"undefined\"||!g){g=\"bubble\";g=typeof d!==\"undefined\"&&d&&d!==\"false\"?\"bubble\":\"none\"}if(typeof e==\"undefined\"||!e)e=\"450px\";if(typeof h==\"undefined\"||!h)h=\"\";if(typeof j==\"undefined\"||!j)j=\"\";if(typeof i== \"undefined\"||!i)i=\"\";d=\"\";f==\"medium\"&&(d=\"padding-top:1px !important;\");b.attr(\"data-shr_status\",\"1\");d=SHR4P.jQuery(\"\").get(0);b.replaceWith(d);SHR4P.jQuery(d).append(\"\");d=SHR4P.jQuery(d).find(\":first-child\").get(0);gapi.plusone.render(d,{size:f,annotation:g,width:e,expandto:h,onstartinteraction:j,onendinteraction:i,href:decodeURIComponent(c),callback:function(b){SHR4P.googPlusOneUtil.trackPlusOneClick(b,a)}});SHR4P.ga.socialAction({serviceId:304, serviceAction:\"render\",link:c})}})},trackPlusOneClick:function(b,c){if(b.state==\"on\"){SHR4P.utils.trackAction({serviceId:304,href:b.href,title:c});SHR4P.ga.socialAction({serviceId:304,serviceAction:\"like\",link:b.href})}else SHR4P.ga.socialAction({serviceId:304,serviceAction:\"unlike\",link:b.href})}}; SHR4P.twitterUtil={addTwitterScript:function(){SHR4P.twitterUtil.renderShareaholicTweetButton()},renderShareaholicTweetButton:function(){SHR4P.jQuery(\".shareaholic-tweetbutton\",\".shareaholic-like-buttonset\").each(function(){var b=SHR4P.jQuery,c=b(this);if((c.attr(\"data-shr_status\")||false)!=\"1\"){var a=c.attr(\"data-shr_href\")||c.attr(\"shr_href\"),f=c.attr(\"data-shr_title\")||c.attr(\"shr_title\"),d=c.attr(\"data-shr_size\")||c.attr(\"shr_size\"),g=c.attr(\"data-shr_count\")||c.attr(\"shr_count\"),e=c.attr(\"data-shr_lang\"), h=\"shr-7\",j=\"shr-generic\",i=true,k=true;SHR4P.debug(c);if(typeof g==\"undefined\"||!g)g=\"none\";if((typeof a==\"undefined\"||!a)&&(typeof f==\"undefined\"||!f)){a=encodeURIComponent(document.location.href);f=document.title}else{if(typeof a==\"undefined\"||!a)a=encodeURIComponent(document.location.href);if(typeof f==\"undefined\"||!f)f=\"\"}if(typeof d==\"undefined\"||!d)d=\"standard\";var l=\"\";d==\"medium\"&&(l=\"padding-top:1px !important;\");if(typeof e==\"undefined\"||!e)e=\"en\";switch(g){case \"horizontal\":k=i=true;break; case \"vertical\":i=true;k=false;break;case \"none\":k=i=false}if(i){h=h+\"-count\";j=j+\"-count\"}if(i&&k){h=h+\"-compact\";j=j+\"-compact\"}if(i&&typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){var n=this;if(k){this.style.marginRight=\"0px\";d=document.createElement(\"div\");n=document.createElement(\"div\");b(this).after(n);n.className=\"shr_compact_div\";d.className=\"shr_compact_tick\";d.appendChild(document.createElement(\"s\"));d.appendChild(document.createElement(\"i\"));b(this).after(d)}d=function(a){n.innerHTML= a.count};i&&SHR4P.utils.getTwitShrCnt(decodeURIComponent(a),d)}var m=a,o={title:f,link:m,short_link:\"\",shortener:SHRSB_Globals.shortener?SHRSB_Globals.shortener:\"google\",shortener_key:SHRSB_Globals.shortener_key?SHRSB_Globals.shortener_key:\"\",v:1,apitype:1,apikey:SHR4P.shr_apiKey,twitter_template:SHR4P.shr_twitter_template?SHR4P.shr_twitter_template:\"${title} - ${short_link}\",service:7},a=b(this),f=SHR4P.shr_image||SHR4P.shr_twitter_image,i=SHR4P.shr_image?\".shr-7-count{background-position:-57px -80px;}.shr-7-count-compact,.shr-7{height:14px;width:55px;background-position:-228px -79px;}.shr-7-count-compact:hover,.shr-7:hover{height:14px;width:55px;background-position:-228px -100px;}.shr-7-count-compact:active,.shr-7:active{height:14px;width:55px;background-position:-228px -121px;}\": \".shr-7-count{background-position:-57px -80px;}.shr-7-count-compact,.shr-7{height:14px;width:55px;background-position:0px 0px;}.shr-7-count-compact:hover,.shr-7:hover{height:14px;width:55px;background-position:0px -21px;}.shr-7-count-compact:active,.shr-7:active{height:14px;width:55px;background-position:0px -41px;}\";a.before(b(' div.shareaholic a{background-image:url('+f+\") !important;}.shr-generic-count{height:53px;width:57px;font-weight:bold;font-size:14px;padding-top:7px;text-align:center;background:transparent no-repeat scroll;background-position:0px -80px;color:black;cursor:pointer;text-decoration:none;display:block;}.shr-generic-count-compact,.shr-generic{height:23px;width:63px;font-weight:bold;font-size:14px;padding-top:7px;text-align:center;background:transparent no-repeat scroll;background-position:0px -50px;color:black;cursor:pointer;text-decoration:none;display:block;} \"+ (i+\".shr_compact_div{background:#EFEFEF;border:1px solid #C1C1C1;float:left;font-weight:normal;height:14px;margin-left:1px;min-width:15px;padding:1px 2px 1px 2px;text-align:center;font-size:11px;display:block;margin-top:2px;margin-right:15px;line-height:1.3em;}.shr_compact_tick{float:left;position:relative;z-index:2;width:5px;top:5px;left:2px;border-collapse:separate;border-spacing:2px 2px;margin-top:2px;}.shr_compact_tick i{left:2px;top:-6px;border-right-color:#EFEFEF;font-style:italic;}.shr_compact_tick s{text-decoration:line-through;text-align:left;}.shr_compact_tick s,i{border:solid transparent;border-right-color:#C7C7C7;display:block;position:relative;border-width:5px 5px 0 0;}\")+ \"\"));c.wrap('');c.parent().removeClass(\"shr-7\");c.addClass(j);c.addClass(h);SHR4P.debug(c);SHR4P.ga.socialAction({serviceId:7,serviceAction:\"render\",link:m});SHR4P.utils.isMobileBrowser()||c.click(function(a){SHR4P.ga.socialAction({serviceId:7,serviceAction:\"share\",link:m});SHR4P.utils.showServiceLet(o,\"twitter\");a.preventDefault()});c.attr(\"data-shr_status\",\"1\")}})}}; SHR4P.fbUtil={fbConnectAdd:0,renderFBWidgetCalled:!1,likeButtonsToRender:[],hasFB:function(){return typeof window.FB==\"object\"&&FB.Event&&typeof FB.Event.subscribe==\"function\"},addLikeButton:function(b,c){if(SHR4P.fbUtil.hasFBNameSpace()){var a=SHR4P.jQuery('').appendTo(b);typeof window.FB!=\"undefined\"&&FB.XFBML&&FB.XFBML.parse?FB.XFBML.parse(a.get(0)):SHR4P.fbUtil.likeButtonsToRender.push(a.get(0))}else SHR4P.jQuery('').appendTo(b)},renderFBWidgets:function(){if(!SHR4P.fbUtil.renderFBWidgetCalled){setTimeout(\"SHR4P.fbUtil.renderFBLikeButtons()\",0);setTimeout(\"SHR4P.fbUtil.renderFBSendButtons()\",0);for(var b=0;b"},{"title":"","date":"2018-07-02T21:32:42.283Z","updated":"2018-07-02T21:32:42.282Z","comments":true,"path":"files/shareaholic/spritegen/jquery.shareaholic-share-buttons.min.js","permalink":"http://www.serrate.net/files/shareaholic/spritegen/jquery.shareaholic-share-buttons.min.js","excerpt":"","text":"/* Copyright (c) Shareaholic Inc (www.shareaholic.com). All rights reserved. */ \"undefined\"==typeof SHR4P&&(SHR4P={});\"undefined\"==typeof SHR4P.TB&&(SHR4P.TB={});SHR4P.TB.base_url=\"undefined\"!==typeof SHR4P.debug_enabled?\"//www.spreadaholic.com/\":\"//www.shareaholic.com/\";SHR4P.TB.shr_link=SHR4P.TB.base_url+\"api/share/\";SHR4P.TB.shr_css=SHR4P.TB.base_url+\"media/css/shareaholic-share-button.css\";SHR4P.TB.shr_twitter_image=SHR4P.TB.base_url+\"media/images/styles/tb/twitter.png\";SHR4P.TB.shr_image_arrow_up=SHR4P.TB.base_url+\"media/images/styles/tb/arrow_up.png\"; SHR4P.TB.shr_image_arrow_down=SHR4P.TB.base_url+\"media/images/styles/tb/arrow_down.png\";SHR4P.TB.shr_apiKey=\"e3c665c2eb6785741cea4515633f1d86b\";SHR4P.TB.shr_twitter_template=\"${title} - ${short_link} via @Shareaholic\"; \"undefined\"!=typeof SHRSB_Globals&&\"undefined\"!=typeof SHRSB_Globals.src&&(SHR4P.TB.shr_css=SHRSB_Globals.src+\"/shareaholic-share-button.css\",SHR4P.TB.shr_image=SHRSB_Globals.src+\"/shareaholic-publishers-mini.png\",SHR4P.TB.shr_image_arrow_up=SHRSB_Globals.src+\"/arrow_up.png\",SHR4P.TB.shr_image_arrow_down=SHRSB_Globals.src+\"/arrow_down.png\");\"undefined\"!=typeof SHRTB_Settings&&\"undefined\"!=typeof SHRTB_Settings.apikey&&(SHR4P.TB.shr_apiKey=SHRTB_Settings.apikey); \"undefined\"!=typeof SHRTB_Settings&&\"undefined\"!=typeof SHRTB_Settings.shr_twitter_template&&(SHR4P.TB.shr_twitter_template=SHRTB_Settings.shr_twitter_template);\"undefined\"!=typeof SHRSB_Globals&&\"undefined\"!=typeof SHRSB_Globals.twitter_template&&(SHR4P.TB.shr_twitter_template=SHRSB_Globals.twitter_template);SHR4P.debug=function(a){SHR4P.debug_enabled&&(typeof console!=\"undefined\"&&console?console.log(a):alert(a))};SHR4P.TB.ready=!1;SHR4P.TB.init=!1; var SHR4P_init=function(){SHR4P.debug(\"SHR4P_init called\");if(SHR4P.TB.init)SHR4P.debug(\"SHR4P_init returning because already loaded\");else{SHR4P.TB.init=true;SHR4P.TB.jQuery=typeof sb_dont_noConflict!=\"undefined\"&&sb_dont_noConflict?jQuery:jQuery.noConflict(true);var a=SHR4P.TB.jQuery;SHR4P.TB.renderShareButtons=function(){SHR4P.debug(\"SHR4P.TB.renderShareButtons called\");if(typeof SHRTB_Settings==\"undefined\"||!SHRTB_Settings)window.SHRTB_Settings={};a(\".shr-toolbox\").each(function(){var b=a(this), c=b.attr(\"data-shr_form_factor\")||b.attr(\"shr_form_factor\");b.addClass(c+\"-head\");b.attr(\"data-shr_link\")||b.attr(\"shr_link\");b.attr(\"data-shr_title\")||b.attr(\"shr_title\");b.attr(\"data-shr_short_link\")||b.attr(\"shr_short_link\");b.children(\"#shareaholic-services\").wrapInner(\"\");SHR4P.debug(\"SHR4P.TB.layoutFormFactor called\");if(!(typeof c==\"undefined\"||!c||typeof b==\"undefined\"||!b)&&c==\"shareaholic-top-bar\"&&!e){var e=true,c=SHRTB_Settings.topBarBgColor,d=SHRTB_Settings.topBarBorderColor, e=false,f=a(\"document\").height()/4||120,g=false;a(\"#shareToolBar,#showHideToolBar,#shareToolBarAddv,#shareToolBarHeader{background-color: \"+(c||\"#343434\")+\" !important;} .shareToolBarShowButton{ background-image: url(\"+SHR4P.TB.shr_image_arrow_down+\") !important;}.shareToolBarHideButton{background-image: url(\"+SHR4P.TB.shr_image_arrow_up+\") !important;}#shareaholic-bar{border-bottom-color:\"+(d||\"#343434\")+\"} \").appendTo(\"head\");var e=a(\"\"), h=a(\"\"),c=a(\"\"),d=a(\"\"),j=a(\"\");b.wrap(j);j=b.parents(\"#shareToolBar\");j.wrap(h);h=j.parents(\"#shareToolBarContainer\");h.wrap(d);d=h.parents(\"#shareaholic-bar\");e.prependTo(d);c.appendTo(d);b=b.parents(\"#shareaholic-bar\");SHR4P.debug(b);a('').appendTo(h); a('').appendTo(h);var k=a(\"#shareaholic-bar\"),i=a(\"#showHideToolBar\");i.click(function(){g=!g;a(\"#showHideToolBar > div\").toggleClass(\"shareToolBarShowButton shareToolBarHideButton\");if(g){i.hide();a(\"#shareaholic-bar\").css(\"border-bottom-width\",\"0px\").removeClass(\"shareToolBarShadow\")}else i.css(\"margin-left\",\"-100%\");a(\"#shareToolBar, #shareToolBarAddv\").slideToggle(\"slow\",function(){if(!g){a(\"#shareaholic-bar\").css(\"border-bottom-width\",\"1px\").addClass(\"shareToolBarShadow\"); a(\"#shareToolBarHeader\").animate({height:\"+=5\"},{duration:100}).animate({height:\"-=5\"},{duration:100});i.attr(\"title\",\"Click to hide\")}var b=a(\"#showHideToolBar\").css(\"margin-left\");if(g&&b!=\"0px\"){i.css(\"margin-left\",\"0\");i.fadeIn(\"slow\");i.attr(\"title\",\"Click to display\")}})});a(window).scroll(function(){var b=a(window).scrollTop(),c=k.css(\"display\")==\"none\";SHR4P.debug(\"ScrollTop \"+b+\" ScrollOffset: \"+f);if(b>f)c&&a(\"#shareaholic-bar,#shareToolBar, #shareToolBarAddv\").slideDown(\"slow\",function(){a(\"#shareToolBarHeader\").animate({height:\"+=5\"}, {duration:100}).animate({height:\"-=5\"},{duration:100});a(\"#shareaholic-bar\").css(\"border-bottom-width\",\"1px\").addClass(\"shareToolBarShadow\");i.fadeIn(\"slow\");i.attr(\"title\",\"Click to hide\")});else if(!g){i.hide();a(\"#shareaholic-bar\").css(\"border-bottom-width\",\"0px\").removeClass(\"shareToolBarShadow\");a(\"#shareaholic-bar,#shareToolBar, #shareToolBarAddv, #showHideToolBar\").slideUp(\"slow\")}})}})};SHR4P.TB.ready=true;if(typeof SHR4P.TB.onready!=\"undefined\")SHR4P.TB.onready()}}; SHR4P.TB.load=function(){setTimeout(\"SHR4P.dough()\",0);var a=document.createElement(\"link\");a.rel=\"stylesheet\";a.type=\"text/css\";a.href=SHR4P.TB.shr_css;document.getElementsByTagName(\"head\")[0].appendChild(a);if(typeof jQuery!=\"undefined\"&&jQuery){a=jQuery().jquery;if(SHRSB_Globals.minJQueryVersion0){e=a[0].total_count;e!=0&&e>1E3&&(e=Math.floor(e/1E3)+\"K\")}b({count:e})})}},getTwitShrCnt:function(a,b){if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){a=\"https://cdn.api.twitter.com/1/urls/count.json?url=\"+ encodeURIComponent(a);SHR4P.TB.jQuery.getJSON(a+\"&callback=?\",function(a){a=a.count;a!=0&&a>1E3&&(a=Math.floor(a/1E3)+\"K\");b({count:a})})}}}; SHR4P.TB.renderLikeButtons=function(){SHR4P.TB.jQuery(\".shareaholic-fblike,.shareaholic-fbsend\",\".shareaholic-like-buttonset\").length>0&&setTimeout(\"SHR4P.TB.fbUtil.addFBConnect()\",0);SHR4P.TB.jQuery(\".shareaholic-googleplusone\",\".shareaholic-like-buttonset\").length>0&&setTimeout(\"SHR4P.TB.googPlusOneUtil.addGoogScript()\",0);SHR4P.TB.jQuery(\".shareaholic-tweetbutton\",\".shareaholic-like-buttonset\").length>0&&setTimeout(\"SHR4P.TB.twitterUtil.addTwitterScript()\",0)}; SHR4P.TB.googPlusOneUtil={addGoogScript:function(){if(SHR4P.TB.jQuery(\"#googplusonescript\").length==0){var a=document.createElement(\"script\");a.async=true;a.src=\"https://apis.google.com/js/plusone.js\";a.id=\"googplusonescript\";a.text='{\"parsetags\": \"explicit\"}';document.getElementsByTagName(\"head\")[0].appendChild(a);a.onreadystatechange=function(){(this.readyState==\"complete\"||this.readyState==\"loaded\")&&SHR4P.TB.googPlusOneUtil.renderPlusOnes()};a.onload=SHR4P.TB.googPlusOneUtil.renderPlusOnes}}, renderPlusOnes:function(){SHR4P.TB.jQuery(\".shareaholic-googleplusone\",\".shareaholic-like-buttonset\").each(function(){var a=SHR4P.TB.jQuery(this);if((a.attr(\"data-shr_status\")||false)!=\"1\"){var b=a.attr(\"data-shr_href\")||a.attr(\"shr_href\"),c=a.attr(\"data-shr_title\")||a.attr(\"shr_title\"),e=a.attr(\"data-shr_size\")||a.attr(\"shr_size\"),d=a.attr(\"data-shr_count\")||a.attr(\"shr_count\"),f=a.attr(\"data-shr_annotation\"),g=a.attr(\"data-shr_width\"),h=a.attr(\"data-shr_expandto\"),j=a.attr(\"data-shr_onstartinteraction\"), k=a.attr(\"data-shr_onendinteraction\");if(typeof d==\"undefined\"||!d)d=\"true\";if((typeof b==\"undefined\"||!b)&&(typeof c==\"undefined\"||!c)){b=encodeURIComponent(document.location.href);c=document.title}else{if(typeof b==\"undefined\"||!b)b=encodeURIComponent(document.location.href);if(typeof c==\"undefined\"||!c)c=\"\"}if(typeof e==\"undefined\"||!e)e=\"standard\";if(typeof f==\"undefined\"||!f){f=\"bubble\";f=typeof d!==\"undefined\"&&d&&d!==\"false\"?\"bubble\":\"none\"}if(typeof g==\"undefined\"||!g)g=\"450px\";if(typeof h== \"undefined\"||!h)h=\"\";if(typeof j==\"undefined\"||!j)j=\"\";if(typeof k==\"undefined\"||!k)k=\"\";d=\"\";e==\"medium\"&&(d=\"padding-top:1px !important;\");a.attr(\"data-shr_status\",\"1\");d=SHR4P.TB.jQuery(\"\").get(0);a.replaceWith(d);SHR4P.TB.jQuery(d).append(\"\");d=SHR4P.TB.jQuery(d).find(\":first-child\").get(0);gapi.plusone.render(d,{size:e,annotation:f,width:g,expandto:h,onstartinteraction:j,onendinteraction:k,href:decodeURIComponent(b),callback:function(a){SHR4P.TB.googPlusOneUtil.trackPlusOneClick(a, c)}})}})},trackPlusOneClick:function(a,b){a.state==\"on\"&&SHR4P.TB.jQuery(\"\").attr({src:\"http://www.shareaholic.com/api/share/?v=1&apikey=\"+SHR4P.TB.shr_apiKey+\"&apitype=3&service=304&link=\"+encodeURIComponent(a.href)+(b!==\"\"?\"&title=\"+b:\"\"),width:\"1\",height:\"1\"}).appendTo(\"body\")}}; SHR4P.TB.twitterUtil={addTwitterScript:function(){SHR4P.TB.twitterUtil.renderShareaholicTweetButton()},renderShareaholicTweetButton:function(){SHR4P.TB.jQuery(\".shareaholic-tweetbutton\",\".shareaholic-like-buttonset\").each(function(){var a=SHR4P.TB.jQuery,b=a(this);if((b.attr(\"data-shr_status\")||false)!=\"1\"){var c=b.attr(\"data-shr_href\")||b.attr(\"shr_href\"),e=b.attr(\"data-shr_title\")||b.attr(\"shr_title\"),d=b.attr(\"data-shr_size\")||b.attr(\"shr_size\"),f=b.attr(\"data-shr_count\")||b.attr(\"shr_count\"), g=b.attr(\"data-shr_lang\"),h=\"shr-7\",j=\"shr-generic\",k=true,i=true;SHR4P.debug(b);if(typeof f==\"undefined\"||!f)f=\"none\";if((typeof c==\"undefined\"||!c)&&(typeof e==\"undefined\"||!e)){c=encodeURIComponent(document.location.href);e=document.title}else{if(typeof c==\"undefined\"||!c)c=encodeURIComponent(document.location.href);if(typeof e==\"undefined\"||!e)e=\"\"}if(typeof d==\"undefined\"||!d)d=\"standard\";var m=\"\";d==\"medium\"&&(m=\"padding-top:1px !important;\");if(typeof g==\"undefined\"||!g)g=\"en\";switch(f){case \"horizontal\":i= k=true;break;case \"vertical\":k=true;i=false;break;case \"none\":i=k=false}if(k){h=h+\"-count\";j=j+\"-count\"}if(k&&i){h=h+\"-compact\";j=j+\"-compact\"}if(k&&typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){var l=this;if(i){this.style.marginRight=\"0px\";d=document.createElement(\"div\");l=document.createElement(\"div\");f=this.parentNode;f.appendChild(l);l.className=\"shr_compact_div\";d.className=\"shr_compact_tick\";d.appendChild(document.createElement(\"s\"));d.appendChild(document.createElement(\"i\")); f.insertBefore(d,l)}d=function(a){l.innerHTML=a.count};k&&SHR4P.TB.utils.getTwitShrCnt(decodeURIComponent(c),d)}var n={title:e,link:c,short_link:c,shortener:SHRSB_Globals.shortener?SHRSB_Globals.shortener:\"google\",shortener_key:SHRSB_Globals.shortener_key?SHRSB_Globals.shortener_key:\"\",v:1,apitype:1,apikey:SHR4P.TB.shr_apiKey,twitter_template:SHR4P.TB.shr_twitter_template?SHR4P.TB.shr_twitter_template:\"${title} - ${short_link}\",service:7};[SHR4P.TB.shr_link,a.param(n)].join(\"?\");a(this).before(a(' div.shareaholic a{background-image:url('+ (SHR4P.TB.shr_image||SHR4P.TB.shr_twitter_image)+\") !important;}.shr-generic-count{height:53px;width:57px;font-weight:bold;font-size:14px;padding-top:7px;text-align:center;background:transparent no-repeat scroll;background-position:0px -80px;color:black;cursor:pointer;text-decoration:none;display:block;}.shr-generic-count-compact,.shr-generic{height:23px;width:63px;font-weight:bold;font-size:14px;padding-top:7px;text-align:center;background:transparent no-repeat scroll;background-position:0px -50px;color:black;cursor:pointer;text-decoration:none;display:block;} \"+ (SHR4P.TB.shr_image?\".shr-7-count{background-position:-57px -80px;}.shr-7-count-compact,.shr-7{height:14px;width:55px;background-position:-228px -79px;}.shr-7-count-compact:hover,.shr-7:hover{height:14px;width:55px;background-position:-228px -100px;}.shr-7-count-compact:active,.shr-7:active{height:14px;width:55px;background-position:-228px -121px;}\":\".shr-7-count{background-position:-57px -80px;}.shr-7-count-compact,.shr-7{height:14px;width:55px;background-position:0px 0px;}.shr-7-count-compact:hover,.shr-7:hover{height:14px;width:55px;background-position:0px -21px;}.shr-7-count-compact:active,.shr-7:active{height:14px;width:55px;background-position:0px -41px;}\")+ \"\"));b.wrap('');b.parent().removeClass(\"shr-7\");b.addClass(j);b.addClass(h);SHR4P.debug(b);SHR4P.TB.utils.isMobileBrowser()||b.click(function(a){SHR4P.TB.utils.showServiceLet(n,\"twitter\");a.preventDefault()});b.attr(\"data-shr_status\",\"1\")}})},trackTweetButtonClick:function(a){a.type=\"tweet\";SHR4P.TB.jQuery(\"\").attr({src:\"http://www.shareaholic.com/api/share/?v=1&apikey=\"+SHR4P.TB.shr_apiKey+ \"&apitype=3&service=7&link=\"+encodeURIComponent(a.target.baseURI)+(a.target.title!==\"\"?\"&title=\"+a.target.title:\"\"),width:\"1\",height:\"1\"}).appendTo(\"body\")}}; SHR4P.dough=SHR4P.dough||function(a,b){return function(){if(typeof SHRSB_Globals!=\"undefined\"&&SHRSB_Globals.perfoption==\"1\"){var c;if(!(c=a.SHR_Load_Dough)){c=b.createElement(\"script\");c.type=\"text/javascript\";c.async=true;c.src=(\"https:\"==document.location.protocol?\"https://\":\"http://\")+\"dtym7iokkjlif.cloudfront.net/dough/1.0/recipe.js\";var e=b.getElementsByTagName(\"script\")[0];e.parentNode.insertBefore(c,e);c=true}a.SHR_Load_Dough=c}}}(window,document); SHR4P.TB.fbUtil={fbConnectAdd:0,renderFBWidgetCalled:!1,likeButtonsToRender:[],hasFB:function(){return typeof window.FB==\"object\"&&FB.Event&&typeof FB.Event.subscribe==\"function\"},addLikeButton:function(a,b){if(SHR4P.TB.fbUtil.hasFBNameSpace()){var c=SHR4P.TB.jQuery('').appendTo(a);typeof window.FB!=\"undefined\"&&FB.XFBML&&FB.XFBML.parse?FB.XFBML.parse(c.get(0)):SHR4P.TB.fbUtil.likeButtonsToRender.push(c.get(0))}else SHR4P.TB.jQuery('').appendTo(a)},renderFBWidgets:function(){if(!SHR4P.TB.fbUtil.renderFBWidgetCalled){setTimeout(\"SHR4P.TB.fbUtil.renderFBLikeButtons()\",0);setTimeout(\"SHR4P.TB.fbUtil.renderFBSendButtons()\",0);for(var a=0;a=\"9.0\")){a.attr(\"xmlns:fb\",\"http://www.facebook.com/2008/fbml\");a.attr(\"xmlns:og\",\"http://opengraphprotocol.org/schema/\")}},hasFBNameSpace:function(){return typeof SHR4P.TB.jQuery(SHR4P.TB.jQuery(\"html\").get(0)).attr(\"xmlns:fb\")!=\"undefined\"}};SHR4P.TB.load();"},{"title":"","date":"2018-07-02T21:32:42.289Z","updated":"2018-07-02T21:32:42.288Z","comments":true,"path":"files/shareaholic/spritegen/shareaholic-share-button.css","permalink":"http://www.serrate.net/files/shareaholic/spritegen/shareaholic-share-button.css","excerpt":"","text":"/* Document :shareaholic-share-button Created on :14 Jun,2011,3:43:37 PM Author :sharad,Ankur Agarwal Description:For shareaholic share buttons */ /*Parent -Container*/ #shareaholic-bar{position:fixed !important;top:0px !important;/* margin-left:-8px;*/ left:0px;width:100% !important;height:35px!important;z-index:2147483647;min-width:140px;/* 2x LC width + RC width */ border-bottom:1px solid;} #shareaholic-bar .column{float:left;} #shareToolBarContainer{/* padding-left:8px;LC Width */ padding-right:88px;/* RC Width */} /*Button Container -left*/ #showHideToolBar{float:left;width:26px !important;cursor:pointer;height:35px !important;z-index:2147483647 !important;position:relative;margin-left:-100%;/* right:0px !important;*/} /*Toolbar content container -center*/ #shareToolBar{float:left;width:100%;position:relative;height:35px;/* margin-left:-8px;*/} /*Advertisement container -right*/ #shareToolBarAddv{float:left;position:relative;width:88px;/*RC Width*/ margin-right:-88px;/*RC Width*/ z-index:2147483647 !important;height:35px;} #shareToolBarHeader{clear:both;/* height:5px;*/} #shareToolBarFooter{clear:both;position:relative;} /*contents of the content container*/ .shareaholic-like-buttonset{height:30px;float:left;padding-top:7px} #shareaholic-services{height:30px;float:left;} .containerHide{display:none;} .containerShow{display:block;} #shareaholic-bar .shr-toolbox{position:relative !important;margin-left:auto;margin-right:auto;display: table;} .shareToolBarShadow{-moz-box-shadow:0 1px 0 rgba(0,0,0,0.12);-webkit-box-shadow:0 1px 0 rgba(0,0,0,0.12);box-shadow:0 1px 0 rgba(0,0,0,0.12);} #shareaholic-bar .shr-toolbox li{margin-top:7px !important;width:120 px !important;float:left !important;list-style-type:none !important;font-size:11px !important;} #shareaholic-bar .shr-toolbox li a{text-decoration:none !important;} #shareaholic-bar .shr-toolbox li:hover{} .shr-toolbox ul{list-style-type :none !important;padding:0;margin:0;} .shareToolBarButton{margin:8px 5px 9px 5px;font-size:0px;line-height:0%;height:18px !important;width:16px !important;border:0px;} .shareToolBarHideButton{/* background-image:url(http://www.shareaholic.com/media/images/styles/tb/arrow_up.png);*/} .shareToolBarShowButton{/* background-image:url(http://www.shareaholic.com/media/images/styles/tb/arrow_down.png);*/} #shareaholic-bar .shr-text{cursor:pointer;margin:6px 0 0 9px;padding:0;float:left !important;width:65px;} #shareaholic-bar .shr-5 .shr-icon{background-position:0px 0px;} #shareaholic-bar .shr-5:hover .shr-icon{background-position:0px -24px;} #shareaholic-bar .shr-7 .shr-icon{background-position:0px -48px;} #shareaholic-bar .shr-7:hover .shr-icon{background-position:0px -72px;} #shareaholic-bar .shr-201 .shr-icon{background-position:0px -96px;} #shareaholic-bar .shr-201:hover .shr-icon{background-position:0px -120px;} div.shr-count{font:9px bold,arial !important;position:relative !important;} div.shr-count-outline{position:absolute !important;color:white !important;} div.shr-count-center{position:absolute !important;color:blue !important;} /* Generic .shr-generic-count{height:53px;width:57px;font-weight:bold;font-size:14px;padding-top:7px;text-align:center;background:transparent no-repeat scroll;background-position:0px -80px;color:black;cursor:pointer;text-decoration:none;display:block;} .shr-generic-count-compact,.shr-generic{height:23px;width:63px;font-weight:bold;font-size:14px;padding-top:7px;text-align:center;background:transparent no-repeat scroll;background-position:0px -50px;color:black;cursor:pointer;text-decoration:none;display:block;} Facebook .shr-5-count{background-position:0px -80px;} .shr-5-count-compact,.shr-5{height:23px;width:63px;background-position:0px -50px;} Twitter .shr-7-count{background-position:-57px -80px;} .shr-7-count-compact,.shr-7{height:14px;width:55px;background-position:-228px -79px;} email .shr_btn_email_count{background-position:-114px -80px;} .shr_btn_email{height:23px;width:57px;background-position:-114px -112px;} */ /*right-count*/ .shr_compact_div{background:#EFEFEF;border:1px solid #C1C1C1;float:left;font-weight:normal;height:14px;margin-left:1px;min-width:15px;padding:1px 2px 1px 2px;text-align:center;font-size:11px;display:block;margin-top:2px;margin-right:15px;line-height:1.3em;} .shr_compact_tick{float:left;position:relative;z-index:2;width:5px;top:5px;left:2px;border-collapse:separate;border-spacing:2px 2px;margin-top:2px;} .shr_compact_tick i{left:2px;top:-6px;border-right-color:#EFEFEF;font-style:italic;} .shr_compact_tick s{text-decoration:line-through;text-align:left;} .shr_compact_tick s,i{border:solid transparent;border-right-color:#C7C7C7;display:block;position:relative;border-width:5px 5px 0 0;} #shareaholic-bar a{float:left;margin-right:15px;}"},{"title":"","date":"2018-07-02T21:32:42.292Z","updated":"2018-07-02T21:32:42.291Z","comments":true,"path":"files/shareaholic/spritegen/shr-custom-sprite.css","permalink":"http://www.serrate.net/files/shareaholic/spritegen/shr-custom-sprite.css","excerpt":"","text":"div.shr-bookmarks{margin:20px 0 8px;clear:both !important}div.shr-bookmarks-expand{height:32px;overflow:hidden}div.shr-bookmarks ul.socials li{background-image:url('shr-custom-sprite.png') !important;background-repeat:no-repeat !important;}div.shr-bookmarks-bg-caring{padding:26px 0 0 10px !important;background:transparent url('../images/sharing-caring-hearts.png') no-repeat !important}div.shr-bookmarks ul.socials{width:100% !important;margin:0 !important;padding:0 !important;float:left !important}div.shr-bookmarks ul.socials{background:transparent none !important;border:0 none !important;outline:0 none !important}div.shr-bookmarks ul.socials li{display:inline !important;float:left !important;list-style-type:none !important;padding:0 !important;height:29px !important;width:60px !important;cursor:pointer !important;margin:3px 0 0 !important;background-color:transparent !important;border:0 none !important;outline:0 none !important;clear:none !important}div.shr-bookmarks ul.socials li:before,div.shr-bookmarks ul.socials li:after,div.shr-bookmarks ul.socials li a:before,div.shr-bookmarks ul.socials li a:after{content:'' !important;}div.shr-bookmarks ul.socials a,div.shr-bookmarks ul.socials a:hover{display:block !important;width:60px !important;height:29px !important;text-indent:-9999px !important;background-color:transparent !important;text-decoration:none !important;border:0 none !important}div.shr-bookmarks ul.socials a:hover,div.shr-bookmarks ul.socials li:hover{background-color:transparent !important;border:0 none !important;outline:0 none !important}div.shr-bookmarks div.shr-getshr{line-height:15px !important;padding-top:2px !important;padding-left:8px !important;float:left !important;}div.shr-bookmarks div.shr-getshr a{width:auto !important;font-size:10px !important; text-indent:0px !important;text-decoration:none !important;}div.shr-count{font:12px bold,arial !important;position: relative !important;}div.shr-count-outline{position: absolute !important;color: white !important;}div.shr-count-center{position: absolute !important;color: blue !important;}li.shr-facebook{background-position:0px bottom !important}li.shr-facebook:hover{background-position:0px top !important}li.shr-twitter{background-position:-60px bottom !important}li.shr-twitter:hover{background-position:-60px top !important}li.shr-linkedin{background-position:-120px bottom !important}li.shr-linkedin:hover{background-position:-120px top !important}li.shr-googleplus{background-position:-180px bottom !important}li.shr-googleplus:hover{background-position:-180px top !important}li.shr-googlebookmarks{background-position:-240px bottom !important}li.shr-googlebookmarks:hover{background-position:-240px top !important}li.shr-stumbleupon{background-position:-300px bottom !important}li.shr-stumbleupon:hover{background-position:-300px top !important}li.shr-fastmail{background-position:-360px bottom !important}li.shr-fastmail:hover{background-position:-360px top !important}li.shr-printfriendly{background-position:-420px bottom !important}li.shr-printfriendly:hover{background-position:-420px top !important}"},{"title":"","date":"2018-07-02T21:32:42.298Z","updated":"2018-07-02T21:32:42.298Z","comments":true,"path":"files/shareaholic/spritegen/sprite.css","permalink":"http://www.serrate.net/files/shareaholic/spritegen/sprite.css","excerpt":"","text":"div.shr-bookmarks{margin:20px 0 8px;clear:both !important;display:block !important}div.shr-bookmarks ul.shr-socials{width:100% !important;margin:0 !important;padding:0 !important;float:left !important}div.shr-bookmarks ul.shr-socials{background:transparent none !important;border:0 none !important;outline:0 none !important}div.shr-bookmarks ul.shr-socials li{display:inline !important;float:left !important;list-style-type:none !important;padding:0 !important;height:29px !important;width:60px !important;cursor:pointer !important;margin:3px 0 0 !important;background-color:transparent !important;border:0 none !important;outline:0 none !important;clear:none !important}div.shr-bookmarks ul.shr-socials li:before,div.shr-bookmarks ul.shr-socials li:after,div.shr-bookmarks ul.shr-socials li a:before,div.shr-bookmarks ul.shr-socials li a:after{content:'' !important;}div.shr-bookmarks ul.shr-socials a,div.shr-bookmarks ul.shr-socials a:hover{display:block !important;width:60px !important;height:29px !important;text-indent:-9999px !important;background-color:transparent !important;text-decoration:none !important;border:0 none !important}div.shr-bookmarks ul.shr-socials a:hover,div.shr-bookmarks ul.shr-socials li:hover{background-color:transparent !important;border:0 none !important;outline:0 none !important}.shareaholic-show-on-load{display: block !important;}div.shr-bookmarks div.shr-getshr{line-height:20px !important;padding-left:8px !important;float:left !important;}div.shr-bookmarks div.shr-getshr a{width:auto !important;font-size:10px !important; text-indent:0px !important;text-decoration:none !important;}div.shr-count{font:12px bold,arial !important;position: relative !important;}div.shr-count-outline{position: absolute !important;color: white !important;}div.shr-count-center{position: absolute !important;color: blue !important;}li.shr-5{background-position:-300px bottom !important}li.shr-5:hover{background-position:-300px top !important}li.shr-7{background-position:-420px bottom !important}li.shr-7:hover{background-position:-420px top !important}li.shr-38{background-position:-2280px bottom !important}li.shr-38:hover{background-position:-2280px top !important}li.shr-74{background-position:-4440px bottom !important}li.shr-74:hover{background-position:-4440px top !important}li.shr-88{background-position:-5280px bottom !important}li.shr-88:hover{background-position:-5280px top !important}li.shr-236{background-position:-14160px bottom !important}li.shr-236:hover{background-position:-14160px top !important}li.shr-304{background-position:-18240px bottom !important}li.shr-304:hover{background-position:-18240px top !important}li.shr-313{background-position:-18780px bottom !important}li.shr-313:hover{background-position:-18780px top !important}"}],"posts":[{"title":"Introduction to MLflow","slug":"introduction-to-mlflow","date":"2018-07-02T22:00:00.000Z","updated":"2018-07-02T21:27:35.236Z","comments":true,"path":"2018/07/03/introduction-to-mlflow/","link":"","permalink":"http://www.serrate.net/2018/07/03/introduction-to-mlflow/","excerpt":"","text":"MLflow is a tool to manage the lifecycle of Machine Learning projects. Is composed by three components: Tracking: Records parameters, metrics and artifacts of each run of a model Projects: Format for packaging data science projects and its dependencies Models: Generic format for packaging ML models and serve them through REST API or others. ML Tracking using XGBoostLet’s work on a quick sample to demonstrate the benefits of MLFlow by tracking ML experiment using XGBoost and the Census Income Data Set. 123456789101112131415161718192021222324252627282930313233with mlflow.start_run(): # model parameters params = &#123;'learning_rate': 0.1, 'n_estimators': 100, 'seed': 0, 'subsample': 1, 'colsample_bytree': 1, 'objective': 'binary:logistic', 'max_depth': 3&#125; # log model params for key in params: mlflow.log_param(key, params[key]) # train XGBoost model gbtree = XGBClassifier(**params) gbtree.fit(train_features, train_labels) importances = gbtree.get_booster().get_fscore() print(importances) # get predictions y_pred = gbtree.predict(test_features) accuracy = accuracy_score(test_labels, y_pred) print(\"Accuracy: %.1f%%\" % (accuracy * 100.0)) # log accuracy metric mlflow.log_metric(\"accuracy\", accuracy) sns.set(font_scale=1.5) xgb.plot_importance(gbtree) plt.savefig(\"importance.png\", dpi = 200, bbox_inches = \"tight\") mlflow.log_artifact(\"importance.png\") # log model mlflow.sklearn.log_model(gbtree, \"model\") In this example, we’re using the MLflow Python API to track the experiment parameters, metric (accuracy), artifacts (our plot) and the XGBoost model. When we run for the first time, we can see in the MLflow UI the following: With our initial parameters we see that the metric accuracy is: 0.866 (86.6%) If we select the run and we see our artifact: Next, we will change our parameter max_depth to 6 and let’s see what happens: And we see that our accuract has improved: 0.874 (87.4%) All the history is tracked, as well as the model itself, so it means we will have all our experiments history tracked and the performance on the model at one moment in time. You can check the full sample in Github https://github.com/mserrate/mlflow-sample.","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.serrate.net/categories/Machine-Learning/"}],"tags":[{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"},{"name":"MachineLearning","slug":"MachineLearning","permalink":"http://www.serrate.net/tags/MachineLearning/"},{"name":"ML","slug":"ML","permalink":"http://www.serrate.net/tags/ML/"}]},{"title":"Using an external Hive Metastore in Azure Databricks","slug":"azure-databricks-hive-metastore","date":"2018-06-29T22:00:00.000Z","updated":"2018-06-30T11:27:53.243Z","comments":true,"path":"2018/06/30/azure-databricks-hive-metastore/","link":"","permalink":"http://www.serrate.net/2018/06/30/azure-databricks-hive-metastore/","excerpt":"","text":"If you already have a Hive metastore, such as the one used by Azure HDInsight, you can use Spark SQL to query the tables the same way you do it in Hive with the advantage to have a centralized metastore to manage your table schemas from both Databricks and HDInsight. There are a couple of options to set up in the spark cluster configuration.Apart from the database configuration options you need to specify the hive metastore version, for the current HDInsight version this is 2.1.1, and make sure to set hive.metastore.schema.verification.record.version and hive.metastore.schema.verification to true to make sure that the Spark cluster doesn’t update the metastore schema.Also you will need to give access to the right Azure Storage account/s in order to have the right permissions to access the underlying physical data (remember that metastore is only that, metadata, not the actual data). 123456789spark.hadoop.javax.jdo.option.ConnectionDriverName com.microsoft.sqlserver.jdbc.SQLServerDriverspark.hadoop.javax.jdo.option.ConnectionURL jdbc:sqlserver://YOUDBSERVER:1433;database=metastore;encrypt=true;trustServerCertificate=true;create=false;loginTimeout=300spark.hadoop.javax.jdo.option.ConnectionUserName YOURDBUSERNAMEspark.hadoop.javax.jdo.option.ConnectionPassword YOURDBPASSWORDhive.metastore.schema.verification.record.version truespark.sql.hive.metastore.jars mavenhive.metastore.schema.verification truespark.sql.hive.metastore.version 2.1.1fs.azure.account.key.YOURACCOUNTNAME.blob.core.windows.net YOURACCOUNTKEY","categories":[{"name":"Spark","slug":"Spark","permalink":"http://www.serrate.net/categories/Spark/"}],"tags":[{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"},{"name":"Spark","slug":"Spark","permalink":"http://www.serrate.net/tags/Spark/"},{"name":"Hive","slug":"Hive","permalink":"http://www.serrate.net/tags/Hive/"}]},{"title":"Logistic Regression with TensorFlow","slug":"logistic-regression-with-tensorflow","date":"2018-02-17T23:00:00.000Z","updated":"2018-02-18T19:46:53.216Z","comments":true,"path":"2018/02/18/logistic-regression-with-tensorflow/","link":"","permalink":"http://www.serrate.net/2018/02/18/logistic-regression-with-tensorflow/","excerpt":"","text":"In the previous post we’ve seen the basics of Logistic Regression &amp; Binary classification. Now we’re going to see an example with python and TensorFlow. On this example we’re going to use the dataset that shows the probability of passing an exam by taking into account 2 features: hours studied vs hours slept. First, we’re going to import the dependencies: 12345678# Import dependenciesimport numpy as npimport matplotlib.pyplot as pltimport tensorflow as tfimport sklearnfrom sklearn.model_selection import train_test_split%matplotlib inline 12345678910111213141516171819202122232425262728data = np.genfromtxt('data_classification.csv', delimiter=',')#Get the 2 features (hours slept &amp; hours studied)X = data[:, 0:2]# Get the result (0 suspended - 1 approved)Y = data[:, 2]# Plottingpos = np.where(Y == 1)neg = np.where(Y == 0)plt.scatter(X[pos, 0], X[pos, 1], marker='o', c='b')plt.scatter(X[neg, 0], X[neg, 1], marker='x', c='r')plt.xlabel('Hours studied')plt.ylabel('Hours slept')plt.legend(['Approved', 'Suspended'])plt.show()#Split the data in train &amp; testY_reshape = data[:,2].reshape(data[:,2].shape[0], 1)x_train, x_test, y_train, y_test = train_test_split(data[:, 0:2], Y_reshape)print (\"x_train shape: \" + str(x_train.shape))print (\"y_train shape: \" + str(y_train.shape))print (\"x_test shape: \" + str(x_test.shape))print (\"y_test shape: \" + str(y_test.shape))num_features = x_train.shape[1] Now we’re building the logistic regression model with TensorFlow: 1234567891011121314151617181920212223242526272829303132333435363738394041424344learning_rate = 0.01training_epochs = 1000tf.reset_default_graph()# By aving 2 features: hours slept &amp; hours studiedX = tf.placeholder(tf.float32, [None, num_features], name=\"X\")Y = tf.placeholder(tf.float32, [None, 1], name=\"Y\")# Initialize our weigts &amp; biasW = tf.get_variable(\"W\", [num_features, 1], initializer = tf.contrib.layers.xavier_initializer())b = tf.get_variable(\"b\", [1], initializer = tf.zeros_initializer())Z = tf.add(tf.matmul(X, W), b)prediction = tf.nn.sigmoid(Z)# Calculate the costcost = tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(logits = Z, labels = Y))# Use Adam as optimization methodoptimizer = tf.train.AdamOptimizer(learning_rate).minimize(cost)init = tf.global_variables_initializer()cost_history = np.empty(shape=[1],dtype=float)with tf.Session() as sess: sess.run(init) for epoch in range(training_epochs): _, c = sess.run([optimizer, cost], feed_dict=&#123;X: x_train, Y: y_train&#125;) print(\"Epoch:\", '%04d' % (epoch+1), \"cost=\", \"&#123;:.9f&#125;\".format(c), \\ \"W=\", sess.run(W), \"b=\", sess.run(b)) cost_history = np.append(cost_history, c) # Calculate the correct predictions correct_prediction = tf.to_float(tf.greater(prediction, 0.5)) # Calculate accuracy on the test set accuracy = tf.reduce_mean(tf.to_float(tf.equal(Y, correct_prediction))) print (\"Train Accuracy:\", accuracy.eval(&#123;X: x_train, Y: y_train&#125;)) print (\"Test Accuracy:\", accuracy.eval(&#123;X: x_test, Y: y_test&#125;)) Our accuracy is 86% not too bad with a dataset of only 100 elements. The optimization of the cost function is as follows: So, our linear regression example looks like follows:","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.serrate.net/categories/Machine-Learning/"}],"tags":[{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"},{"name":"DeepLearning","slug":"DeepLearning","permalink":"http://www.serrate.net/tags/DeepLearning/"},{"name":"MachineLearning","slug":"MachineLearning","permalink":"http://www.serrate.net/tags/MachineLearning/"},{"name":"TensorFlow","slug":"TensorFlow","permalink":"http://www.serrate.net/tags/TensorFlow/"}]},{"title":"Logistic Regression for Deep Learning","slug":"logistic-regression-for-deep-learning-part-i","date":"2018-01-15T23:00:00.000Z","updated":"2018-02-18T19:42:01.975Z","comments":true,"path":"2018/01/16/logistic-regression-for-deep-learning-part-i/","link":"","permalink":"http://www.serrate.net/2018/01/16/logistic-regression-for-deep-learning-part-i/","excerpt":"","text":"In this post we’re going to cover some basic intuition to work on logistic regression for Deep Learning algorithms. Logistic regression is an algorithm for binary classification, which is basically used when you want to have your model to return 0 or 1. Some examples: is this image a cat? is this email spam? etc. The basic equation is:$$\\begin{align} \\hat{y} = w^T x + b \\label{basic}\\end{align}$$ where: $\\mathbf{\\hat{y}}$: is the value that our model predicts $\\mathbf{w \\in \\mathbb{R}^n}$: is a vector of $\\mathbf{n}$ parameters representing the weights. $\\mathbf{x \\in \\mathbb{R}^n}$: is a vector of $\\mathbf{n}$ parameters representing the features. $\\mathbf{b \\in \\mathbb{R}}$: is a scalar representing the bias or intercept term $\\mathbf{w}$ and $\\mathbf{b}$ are the parameters that control the behavior of the model. We can think of $\\mathbf{w}$ as the weights that determine how each feature $\\mathbf{x_i}$ affects the prediction. The objective of the machine learning algorithm is to learn the parameters $\\mathbf{w}$ and $\\mathbf{b}$ so $\\mathbf{\\hat{y}}$ becomes a good estimate of the chance of being $\\mathbf{y}$ Activation function: SigmoidThe output of the equation ($\\ref{basic}$) is a linear function. So, how we transform this linear regression result to a non-linear result? The answer is the sigmoid function that transforms our input to a binary output: $$\\begin{align} \\hat{y} = \\sigma(w^T x + b)\\end{align}$$ where $$\\begin{align} \\sigma(z) = \\frac{1}{1 + e^{-z}}\\end{align}$$ The sigmoid function can be represented as: As you can see this activation function allows us to map results to 0 or 1 given: For larger positive values of $\\mathbf{z}$ we will have a $\\mathbf{\\sigma(z)}$ near 1 For larger negative values of $\\mathbf{z}$ we will have a $\\mathbf{\\sigma(z)}$ near 0 Cost FunctionFirst of all, we have the loss function which is used by one training example:$$\\begin{align} \\mathcal{L}(\\hat{y}, y) = - \\bigl(y\\log\\hat{y} + (1 - y) \\log(1 - \\hat{y})\\bigr)\\end{align}$$ And the cost function measures how you are performing for the entire training set:$$\\begin{align} \\mathcal{J}(w, b) = \\frac1m \\sum_{i=1}^m \\mathcal{L}(\\hat{y}^{(i)}, y^{(i)})\\end{align}$$ As we want to improve as much as possible the performance, we are going to try to find the w &amp; b values that minimizes this cost function. And that, is basically what gradient descent does for us. Gradient descentGradient descent is one of the most popuar optimization methods for neural networks for its simplicity (although it can have convergence problems due local minimums). Other optimization methods are: Adam or RMSprop.The basic idea on gradient descent is that on each iteration (determined by the slope or derivative $\\partial$), the weights are updated incrementally using a learning rate $\\alpha$. A visual interpretation of gradient descent is the following: Given our cost function $\\mathcal{J}(w, b)$, weights and bias are updated with the following formula: $$\\begin{align} w = w - \\alpha\\,\\frac{\\partial\\,\\mathcal{J}(w, b)}{\\partial w}\\end{align}$$$$\\begin{align} b = b - \\alpha\\,\\frac{\\partial\\,\\mathcal{J}(w, b)}{\\partial b}\\end{align}$$ where the symbol $\\partial$ in $\\partial\\,\\mathcal{J}(w, b)$ basically means the derivative of the cost function. In the next post, we will see how to apply this theory with an example written with python & TensorFlow.","categories":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"http://www.serrate.net/categories/Machine-Learning/"}],"tags":[{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"},{"name":"DeepLearning","slug":"DeepLearning","permalink":"http://www.serrate.net/tags/DeepLearning/"},{"name":"MachineLearning","slug":"MachineLearning","permalink":"http://www.serrate.net/tags/MachineLearning/"}]},{"title":"Preview of Kafka Streams","slug":"preview-of-kafka-streams","date":"2016-03-15T01:02:29.000Z","updated":"2017-07-02T16:41:26.000Z","comments":true,"path":"2016/03/15/preview-of-kafka-streams/","link":"","permalink":"http://www.serrate.net/2016/03/15/preview-of-kafka-streams/","excerpt":"","text":"The preview of Kafka Streams, which is one of the main features of the upcoming Apache Kafka 0.10, was announced by Jay Kreps this week. Kafka joins the Stream Processing clubKafka Streams is a library to build streaming applications using Kafka topics as input/output. Kafka Streams is in the same league as other streaming systems such as: Apache Storm, Apache Flink and, not surprisingly, Apache Samza which also uses Kafka for input or output of streams. One of the main advantages is that if you&#8217;re already using Apache Kafka and you need real-time processing, you just need to use the library and you are good to go. Other important features are: stateful processing, windowing and ability to be deployed using your preferred solution: a simple command line, Mesos, YARN or kubernetes and docker if you&#8217;re a container party boy. Streams and TablesOne of the key concepts in Kafka Streams is the support of KStream and KTable. That isn&#8217;t a new concept if you come from the Event Sourcing world: the KStream is the append-only event store where its state is given by replaying the events from the beginning of time until the last event whereas KTable is the snapshot or projection of the current state of the stream given a point in time. Example: Twitter Hashtags Job Show me the code!You can find the complete example here: https://github.com/mserrate/kafka-streams-app 123456789KStream&lt;String, JsonNode&gt; source = builder.stream(stringDeserializer, jsonDeserializer, \"streams-hashtag-input\");KTable&lt;String, Long&gt; counts = source .filter(new HashtagFilter()) .flatMapValues(new HashtagSplitter()) .map(new HashtagMapper()) .countByKey(stringSerializer, longSerializer, stringDeserializer, longDeserializer, \"Counts\");counts.to(\"streams-hashtag-count-output\", stringSerializer, longSerializer); For this example I&#8217;ve been using a simple TweetProducer who connects to the Twitter Streaming API and sends JSON events to a Kafka topic. This topic is read as a KStream and then we begin the process: Filter out the tweets without hashtags Apply a flatMapValues (we are just interested in the values, not the keys) to split the different hashtags in a tweet Apply a map to return a key (hashtag) value (hashtag) as we want to aggregate by hashtag Aggregate the streams per key (the hashtag) and count them &nbsp; Finally we send the KTable to the output queue.","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"}],"tags":[{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"},{"name":"Kafka","slug":"Kafka","permalink":"http://www.serrate.net/tags/Kafka/"},{"name":"Storm","slug":"Storm","permalink":"http://www.serrate.net/tags/Storm/"}]},{"title":"Sentiment analysis of tweets","slug":"sentiment-analysis-of-tweets","date":"2016-02-07T15:40:34.000Z","updated":"2017-07-02T16:42:06.000Z","comments":true,"path":"2016/02/07/sentiment-analysis-of-tweets/","link":"","permalink":"http://www.serrate.net/2016/02/07/sentiment-analysis-of-tweets/","excerpt":"In the previous post I have presented an overview of the topology used to analyse twitter streams with Kafka and Storm. Now it&#8217;s time to cover the technical details of the twitter topology. Twitter Topology The declaration of the storm topology using KafkaSpout to read the tweets from a kafka queue: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576public class TwitterProcessorTopology extends BaseTopology &#123; public TwitterProcessorTopology(String configFileLocation) throws Exception &#123; super(configFileLocation); &#125; private void configureKafkaSpout(TopologyBuilder topology) &#123; BrokerHosts hosts = new ZkHosts(topologyConfig.getProperty(\"zookeeper.host\")); SpoutConfig spoutConfig = new SpoutConfig( hosts, topologyConfig.getProperty(\"kafka.twitter.raw.topic\"), topologyConfig.getProperty(\"kafka.zkRoot\"), topologyConfig.getProperty(\"kafka.consumer.group\")); spoutConfig.scheme= new SchemeAsMultiScheme(new StringScheme()); KafkaSpout kafkaSpout= new KafkaSpout(spoutConfig); topology.setSpout(\"twitterSpout\", kafkaSpout); &#125; private void configureBolts(TopologyBuilder topology) &#123; // filtering topology.setBolt(\"twitterFilter\", new TwitterFilterBolt(), 4) .shuffleGrouping(\"twitterSpout\"); // sanitization topology.setBolt(\"textSanitization\", new TextSanitizationBolt(), 4) .shuffleGrouping(\"twitterFilter\"); // sentiment analysis topology.setBolt(\"sentimentAnalysis\", new SentimentAnalysisBolt(), 4) .shuffleGrouping(\"textSanitization\"); // persist tweets with analysis to Cassandra topology.setBolt(\"sentimentAnalysisToCassandra\", new SentimentAnalysisToCassandraBolt(topologyConfig), 4) .shuffleGrouping(\"sentimentAnalysis\"); // divide sentiment by hashtag topology.setBolt(\"hashtagSplitter\", new HashtagSplitterBolt(), 4) .shuffleGrouping(\"textSanitization\"); // persist hashtags to Cassandra topology.setBolt(\"hashtagCounter\", new HashtagCounterBolt(), 4) .fieldsGrouping(\"hashtagSplitter\", new Fields(\"tweet_hashtag\")); topology.setBolt(\"topHashtag\", new TopHashtagBolt()) .globalGrouping(\"hashtagCounter\"); topology.setBolt(\"topHashtagToCassandra\", new TopHashtagToCassandraBolt(topologyConfig), 4) .shuffleGrouping(\"topHashtag\"); &#125; private void buildAndSubmit() throws Exception &#123; TopologyBuilder builder = new TopologyBuilder(); configureKafkaSpout(builder); configureBolts(builder); Config config = new Config(); //set producer properties Properties props = new Properties(); props.put(\"metadata.broker.list\", topologyConfig.getProperty(\"kafka.broker.list\")); props.put(\"request.required.acks\", \"1\"); props.put(\"serializer.class\", \"kafka.serializer.StringEncoder\"); config.put(KafkaBolt.KAFKA_BROKER_PROPERTIES, props); StormSubmitter.submitTopology(\"twitter-processor\", config, builder.createTopology()); &#125; public static void main(String[] args) throws Exception &#123; String configFileLocation = args[0]; TwitterProcessorTopology topology = new TwitterProcessorTopology(configFileLocation); topology.buildAndSubmit(); &#125;&#125;","text":"In the previous post I have presented an overview of the topology used to analyse twitter streams with Kafka and Storm. Now it&#8217;s time to cover the technical details of the twitter topology. Twitter Topology The declaration of the storm topology using KafkaSpout to read the tweets from a kafka queue: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576public class TwitterProcessorTopology extends BaseTopology &#123; public TwitterProcessorTopology(String configFileLocation) throws Exception &#123; super(configFileLocation); &#125; private void configureKafkaSpout(TopologyBuilder topology) &#123; BrokerHosts hosts = new ZkHosts(topologyConfig.getProperty(\"zookeeper.host\")); SpoutConfig spoutConfig = new SpoutConfig( hosts, topologyConfig.getProperty(\"kafka.twitter.raw.topic\"), topologyConfig.getProperty(\"kafka.zkRoot\"), topologyConfig.getProperty(\"kafka.consumer.group\")); spoutConfig.scheme= new SchemeAsMultiScheme(new StringScheme()); KafkaSpout kafkaSpout= new KafkaSpout(spoutConfig); topology.setSpout(\"twitterSpout\", kafkaSpout); &#125; private void configureBolts(TopologyBuilder topology) &#123; // filtering topology.setBolt(\"twitterFilter\", new TwitterFilterBolt(), 4) .shuffleGrouping(\"twitterSpout\"); // sanitization topology.setBolt(\"textSanitization\", new TextSanitizationBolt(), 4) .shuffleGrouping(\"twitterFilter\"); // sentiment analysis topology.setBolt(\"sentimentAnalysis\", new SentimentAnalysisBolt(), 4) .shuffleGrouping(\"textSanitization\"); // persist tweets with analysis to Cassandra topology.setBolt(\"sentimentAnalysisToCassandra\", new SentimentAnalysisToCassandraBolt(topologyConfig), 4) .shuffleGrouping(\"sentimentAnalysis\"); // divide sentiment by hashtag topology.setBolt(\"hashtagSplitter\", new HashtagSplitterBolt(), 4) .shuffleGrouping(\"textSanitization\"); // persist hashtags to Cassandra topology.setBolt(\"hashtagCounter\", new HashtagCounterBolt(), 4) .fieldsGrouping(\"hashtagSplitter\", new Fields(\"tweet_hashtag\")); topology.setBolt(\"topHashtag\", new TopHashtagBolt()) .globalGrouping(\"hashtagCounter\"); topology.setBolt(\"topHashtagToCassandra\", new TopHashtagToCassandraBolt(topologyConfig), 4) .shuffleGrouping(\"topHashtag\"); &#125; private void buildAndSubmit() throws Exception &#123; TopologyBuilder builder = new TopologyBuilder(); configureKafkaSpout(builder); configureBolts(builder); Config config = new Config(); //set producer properties Properties props = new Properties(); props.put(\"metadata.broker.list\", topologyConfig.getProperty(\"kafka.broker.list\")); props.put(\"request.required.acks\", \"1\"); props.put(\"serializer.class\", \"kafka.serializer.StringEncoder\"); config.put(KafkaBolt.KAFKA_BROKER_PROPERTIES, props); StormSubmitter.submitTopology(\"twitter-processor\", config, builder.createTopology()); &#125; public static void main(String[] args) throws Exception &#123; String configFileLocation = args[0]; TwitterProcessorTopology topology = new TwitterProcessorTopology(configFileLocation); topology.buildAndSubmit(); &#125;&#125; 1. Filter BoltFirst of all, we are going to filter the tweets that we are interested in. As we are going to perform the sentiment analysis just to tweets in english, we are filtering on this property: 12345678910111213141516171819202122232425262728293031323334353637public class TwitterFilterBolt extends BaseBasicBolt &#123; private static final Logger LOG = LoggerFactory.getLogger(TwitterFilterBolt.class); @Override public void execute(Tuple tuple, BasicOutputCollector collector) &#123; try &#123; JSONObject object = (JSONObject)JSONValue.parseWithException(tuple.getString(0)); if (object.containsKey(\"lang\") &amp;amp;amp;&amp;amp;amp; \"en\".equals(object.get(\"lang\"))) &#123; long id = (long)object.get(\"id\"); String text = (String)object.get(\"text\"); String createdAt = (String)object.get(\"created_at\"); JSONObject entities= (JSONObject)object.get(\"entities\"); JSONArray hashtags =(JSONArray)entities.get(\"hashtags\"); HashSet&amp;amp;lt;String&amp;amp;gt; hashtagList = new HashSet&amp;amp;lt;String&amp;amp;gt;(); for(Object hashtag : hashtags) &#123; hashtagList.add(((String)((JSONObject)hashtag).get(\"text\")).toLowerCase()); &#125; collector.emit(new Values(id, text, hashtagList, createdAt)); &#125; else &#123; LOG.debug(\"Ignoring non-english tweets\"); &#125; &#125; catch (ParseException e) &#123; LOG.error(\"Error parsing tweet: \" + e.getMessage()); &#125; &#125; @Override public void declareOutputFields(OutputFieldsDeclarer declarer) &#123; declarer.declare(new Fields(\"tweet_id\", \"tweet_text\", \"tweet_hashtags\", \"tweet_created_at\")); &#125;&#125; 2. Sanitization BoltThen, we will sanitise our tweets by converting accented characters into unaccented characters and by removing single letters or numbers: 1234567891011121314151617181920212223public class TextSanitizationBolt extends BaseBasicBolt &#123; private static final Logger LOG = LoggerFactory.getLogger(TextSanitizationBolt.class); @Override public void execute(Tuple tuple, BasicOutputCollector collector) &#123; String text = tuple.getString(1); String normalizedText = Normalizer.normalize(text, Normalizer.Form.NFD); text = normalizedText.replaceAll(\"\\\\p&#123;InCombiningDiacriticalMarks&#125;+\", \"\"); text = text.replaceAll(\"[^\\\\p&#123;L&#125;\\\\p&#123;Nd&#125;]+\", \" \").toLowerCase(); collector.emit(new Values( tuple.getLongByField(\"tweet_id\"), text, tuple.getValueByField(\"tweet_hashtags\"), tuple.getStringByField(\"tweet_created_at\"))); &#125; @Override public void declareOutputFields(OutputFieldsDeclarer declarer) &#123; declarer.declare(new Fields(\"tweet_id\", \"tweet_text\", \"tweet_hashtags\", \"tweet_created_at\")); &#125;&#125; 3a. Sentiment Analysis BoltOn this bolt we are scoring the tweet by each of its words using SentiWordNet. That&#8217;s not the best way to do it as it can have false positives or negatives given that it does the classification word by word independently: it does not cover the tweet context or sarcasm, etc. but that&#8217;s ok for a sample 🙂 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849public class SentimentAnalysisBolt extends BaseBasicBolt &#123; private static final Logger LOG = LoggerFactory.getLogger(SentimentAnalysisBolt.class); SentiWordNet sentiWordNet; @Override public void prepare(Map stormConf, TopologyContext context) &#123; try &#123; sentiWordNet = SentiWordNet.getInstance(); &#125; catch (IOException e) &#123; LOG.error(\"Problem parsing SentiWordNet file: \" + e.getMessage()); &#125; &#125; @Override public void execute(Tuple tuple, BasicOutputCollector collector) &#123; double count = 0; String text = tuple.getStringByField(\"tweet_text\"); try &#123; String delimiters = \"\\\\W\"; String[] tokens = text.split(delimiters); double feeling = 0; for (int i = 0; i &amp;amp;lt; tokens.length; ++i) &#123; if (!tokens[i].isEmpty()) &#123; // Search as adjective feeling = sentiWordNet.extract(tokens[i], \"a\"); count += feeling; &#125; &#125; LOG.info(\"text: \" + text + \" count: \" + count); &#125; catch (Exception e) &#123; LOG.error(\"Problem found when classifying the text: \" + e.getMessage()); &#125; collector.emit(new Values( tuple.getLongByField(\"tweet_id\"), text, count, tuple.getValueByField(\"tweet_hashtags\"), tuple.getStringByField(\"tweet_created_at\"))); &#125; @Override public void declareOutputFields(OutputFieldsDeclarer declarer) &#123; declarer.declare(new Fields(\"tweet_id\", \"tweet_text\", \"tweet_sentiment\", \"tweet_hashtags\", \"tweet_created_at\")); &#125;&#125; 4a. Save results to CassandraFinally, we will store to Cassandra the the tweet with the score and its hashtags if any: 12345678910111213141516171819202122232425262728public class SentimentAnalysisToCassandraBolt extends CassandraBaseBolt &#123; private static final Logger LOG = LoggerFactory.getLogger(SentimentAnalysisToCassandraBolt.class); public SentimentAnalysisToCassandraBolt(Properties properties) &#123; super(properties); &#125; @Override public void execute(Tuple tuple, BasicOutputCollector collector) &#123; HashSet&lt;String&gt; hashtags = (HashSet&lt;String&gt;)tuple.getValueByField(\"tweet_hashtags\"); Statement statement = QueryBuilder.update(\"tweet_sentiment_analysis\") .with(QueryBuilder.set(\"tweet\", tuple.getStringByField(\"tweet_text\"))) .and(QueryBuilder.set(\"sentiment\", tuple.getDoubleByField(\"tweet_sentiment\"))) .and(QueryBuilder.addAll(\"hashtags\", hashtags)) .and(QueryBuilder.set(\"created_at\", tuple.getStringByField(\"tweet_created_at\"))) .where(QueryBuilder.eq(\"tweet_id\", tuple.getLongByField(\"tweet_id\"))); LOG.debug(statement.toString()); session.execute(statement); &#125; @Override public void declareOutputFields(OutputFieldsDeclarer declarer) &#123; &#125;&#125; 3b. Hashtag Splitter BoltThat branch of the topology graph is responsible for splitting the different hashtags and emitting a tuple per hashtag to the next bolt. That&#8217;s why we inherit from BaseRichBolt in order to manually ACK the tuple after all hashtags have been emitted. 12345678910111213141516171819202122232425public class HashtagSplitterBolt extends BaseRichBolt &#123; OutputCollector collector; Map&lt;String, Integer&gt; count = new HashMap&lt;String, Integer&gt;(); @Override public void prepare(Map map, TopologyContext topologyContext, OutputCollector collector) &#123; this.collector = collector; &#125; @Override public void execute(Tuple tuple) &#123; HashSet&lt;String&gt; hashtags = (HashSet&lt;String&gt;)tuple.getValueByField(\"tweet_hashtags\"); for (String hashtag : hashtags) &#123; collector.emit(new Values(hashtag)); &#125; collector.ack(tuple); &#125; @Override public void declareOutputFields(OutputFieldsDeclarer declarer) &#123; declarer.declare(new Fields(\"tweet_hashtag\")); &#125;&#125; 4b. Hashtag Counter BoltIn this particular case, we are using Fields Grouping because we want to partition the stream by hashtag. It means that the same hashtag will always go to the same task. Thus, we can use a hashmap to count the number of occurrences of a hashtag: 1234567891011121314151617181920212223public class HashtagCounterBolt extends BaseBasicBolt &#123; private static final Logger LOG = LoggerFactory.getLogger(HashtagCounterBolt.class); private Map&lt;String, Long&gt; hashtag_count = new HashMap&lt;String, Long&gt;(); @Override public void execute(Tuple tuple, BasicOutputCollector collector) &#123; String hashtag = tuple.getStringByField(\"tweet_hashtag\"); Long count = hashtag_count.get(hashtag); if (count == null) count = 0L; count++; hashtag_count.put(hashtag, count); collector.emit(new Values(hashtag, count)); &#125; @Override public void declareOutputFields(OutputFieldsDeclarer declarer) &#123; declarer.declare(new Fields(\"hashtag\", \"count\")); &#125;&#125; 5b. Top Hashtag BoltFor that bolt, we are using Global Grouping to get the top 20 hashtags. Global grouping means that all hashtags will go to the same bolt&#8217;s task. For that use case, we need a sliding windows in order to get the top 20 hashtags every 10 seconds. We are relying on the Storm Tick Tuple feature. For normal tuples we just do the ranking of hashtags and, when a tick tuple is received (configured to get it every 10sec) we emit the ranking calculated over this window of time. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960public class TopHashtagBolt extends BaseBasicBolt &#123; List&lt;List&gt; rankings = new ArrayList&lt;List&gt;(); private static final Logger LOG = LoggerFactory.getLogger(TopHashtagBolt.class); private static final Integer TOPN = 20; private static final Integer TICK_FREQUENCY = 10; @Override public void execute(Tuple tuple, BasicOutputCollector collector) &#123; if (isTickTuple(tuple)) &#123; LOG.debug(\"Tick: \" + rankings); collector.emit(new Values(new ArrayList(rankings))); &#125; else &#123; rankHashtag(tuple); &#125; &#125; @Override public void declareOutputFields(OutputFieldsDeclarer declarer) &#123; declarer.declare(new Fields(\"tophashtags\")); &#125; @Override public Map&lt;String, Object&gt; getComponentConfiguration() &#123; Config conf = new Config(); conf.put(Config.TOPOLOGY_TICK_TUPLE_FREQ_SECS, TICK_FREQUENCY); return conf; &#125; private void rankHashtag(Tuple tuple) &#123; String hashtag = tuple.getStringByField(\"hashtag\"); Integer existingIndex = find(hashtag); if (null != existingIndex) rankings.set(existingIndex, tuple.getValues()); else rankings.add(tuple.getValues()); Collections.sort(rankings, new Comparator&lt;List&gt;() &#123; @Override public int compare(List o1, List o2) &#123; return compareRanking(o1, o2); &#125; &#125;); shrinkRanking(); &#125; private Integer find(String hashtag) &#123; for(int i = 0; i &lt; rankings.size(); ++i) &#123; String current = (String) rankings.get(i).get(0); if (current.equals(hashtag)) &#123; return i; &#125; &#125; return null; &#125; private int compareRanking(List one, List two) &#123; long valueOne = (Long) one.get(1); long valueTwo = (Long) two.get(1); long delta = valueTwo - valueOne; if(delta &gt; 0) &#123; return 1; &#125; else if (delta &lt; 0) &#123; return -1; &#125; else &#123; return 0; &#125; &#125; private void shrinkRanking() &#123; int size = rankings.size(); if (TOPN &gt;= size) return; for (int i = TOPN; i &lt; size; i++) &#123; rankings.remove(rankings.size() - 1); &#125; &#125; private static boolean isTickTuple(Tuple tuple) &#123; return tuple.getSourceComponent().equals(Constants.SYSTEM_COMPONENT_ID) &amp;amp;&amp;amp; tuple.getSourceStreamId().equals(Constants.SYSTEM_TICK_STREAM_ID); &#125;&#125; 6b. Save results to CassandraFinally, we are storing the top N hashtags per day in Cassandra. For that we&#8217;re using the row partitioning pattern to store a row per day and the top hashtags for each time bucket (20 seconds) 12345678910111213141516171819202122232425262728293031323334public class TopHashtagToCassandraBolt extends CassandraBaseBolt &#123; private static final Logger LOG = LoggerFactory.getLogger(TopHashtagToCassandraBolt.class); public TopHashtagToCassandraBolt(Properties properties) &#123; super(properties); &#125; @Override public void execute(Tuple tuple, BasicOutputCollector collector) &#123; List&lt;List&gt; rankings = (List) tuple.getValue(0); Map&lt;String, Long&gt; rankingMap = new HashMap&lt;&gt;(); for (List list : rankings) &#123; rankingMap.put((String) list.get(0), (Long) list.get(1)); &#125; DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd\"); Statement statement = QueryBuilder.insertInto(\"top_hashtag_by_day\") .value(\"date\", df.format(new Date())) .value(\"bucket_time\", QueryBuilder.raw(\"dateof(now())\")) .value(\"ranking\", rankingMap); LOG.debug(statement.toString()); session.execute(statement); &#125; @Override public void declareOutputFields(OutputFieldsDeclarer declarer) &#123; &#125;&#125; Next stepsAlthough the hashtag counter may work, I will not say that is entirely correct and there are better ways to do it: You can take a look to this excellent resource: http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/ Using Storm Trident: In the next post I will show how to use the high level abstraction from Storm that allows to process a stream as a sequence of small batches of data (aka micro-batching) and fits better for the top hashtags example.","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"}],"tags":[{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"},{"name":"Storm","slug":"Storm","permalink":"http://www.serrate.net/tags/Storm/"}]},{"title":"Analysis of twitter streams with Kafka and Storm","slug":"analysis-of-twitter-streams-with-kafka-and-storm","date":"2016-01-05T01:24:07.000Z","updated":"2017-07-02T16:42:51.000Z","comments":true,"path":"2016/01/05/analysis-of-twitter-streams-with-kafka-and-storm/","link":"","permalink":"http://www.serrate.net/2016/01/05/analysis-of-twitter-streams-with-kafka-and-storm/","excerpt":"","text":"Following my last post, I will present a real-time processing sample with Kafka and Storm using the Twitter Streaming API. Overview The solution consists of the following: twitter-kafka-producer: A very basic producer that reads tweets from the Twitter Streaming API and stores them in Kafka. twitter-storm-topology: A Storm topology that reads tweets from Kafka and, after applying filtering and sanitization, process the messages in parallel for: Sentiment Analysis: Using a sentiment analysis algorithm to classify the tweet into a positive or negative feeling. Top Hashtags: Calculates the top 20 hashtags using a sliding window. Storm Topology The Storm topology consist of the following elements: Kafka Spout: The spout implementation to read messages from Kafka. Filtering: Filtering out all non-english language tweets. Sanitization: Text normalization in order to be processed properly by the sentiment analysis algorithm. Sentiment Analysis: The algorithm that analyses word by word the text of the tweet, giving a value between -1 to 1. Sentiment Analysis to Cassandra: Stores the tweets and its sentiment value in Cassandra. Hashtag Splitter: Splits the different hashtags appearing in a tweet. Hashtag Counter: Counts hashtag occurrences. Top Hashtag: Does a ranking of the top 20 hashtags given a sliding windows (using the Tick Tuple feature from Storm). Top Hashtag to Cassandra: Stores the top 20 hashtags in Cassandra. SummaryIn this post we have seen the benefits of using Apache Kafka &amp; Apache Storm to ingest and process streams of data, on next posts will look at the implementation details and will provide some analytical insight from the data stored in Cassandra. The sample can be found on Github: https://github.com/mserrate/twitter-streaming-app","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"}],"tags":[{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"},{"name":"Cassandra","slug":"Cassandra","permalink":"http://www.serrate.net/tags/Cassandra/"},{"name":"Kafka","slug":"Kafka","permalink":"http://www.serrate.net/tags/Kafka/"},{"name":"Storm","slug":"Storm","permalink":"http://www.serrate.net/tags/Storm/"}]},{"title":"Big Data: streams and lambdas","slug":"big-data-streams-and-lambdas","date":"2015-12-13T00:31:08.000Z","updated":"2017-07-02T16:16:13.000Z","comments":true,"path":"2015/12/13/big-data-streams-and-lambdas/","link":"","permalink":"http://www.serrate.net/2015/12/13/big-data-streams-and-lambdas/","excerpt":"","text":"I&#8217;ve been working for some years now in distributed systems and event-driven architectures, from the misunderstood SOA (or its refurbished version known as Microservices) to Event Sourcing. Some of the concepts presented in these systems related to events like immutability, perpetuity and versioning are valid as well for stream processing. Stream processing along with batch processing is sometimes referred as Big Data. Big DataWhen we think about Big Data what it first comes to our mind is Hadoop for batch processing. Although Hadoop has a big capacity to process indecent amounts of data, it also comes with a high latency response. Although this latency won&#8217;t be a problem for a lot of use cases, it may be a problem when we need to get real (or near-real) time feedback. That&#8217;s where the Lambda Architecture (by Nathan Marz) comes in by describing how to design a system where most of our data is processed by the batch layer but, while this process is running, we are able to process the streams coming into our system: Where we can say that: Current View = Query(Batch View) + Query(Stream View) Batch LayerThe batch processing layer computes arbitrary sets of data using the entire historical data. The obvious example of batch processing is Hadoop, or to be more precise, the distributed file system HDFS and a processing tool like MapReduce, Pig… The result of this process will be stored in a database that should support batch writes (ElephantDB, HBase) but no random writes. That makes the database architecture extremely simple by removing features like online compactation or concurrency. Stream LayerThe stream processing layer computes data one by one giving immediate feedback. Depending on the number of events or the throughput needed we may use different technologies: Spark Streaming (although it&#8217;s micro-batch the latency may be sufficient for many use cases), Storm, Samza, Flink. The result of this process will be stored in a database that should support random writes, one option may be Cassandra. In following posts I will present concrete examples with docker images using some technologies that I&#8217;ve used like: Kafka, Storm, Cassandra and Druid.","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"}],"tags":[{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"}]},{"title":"Speaking at DotNetSpain conference","slug":"speaking-at-dotnetspain-conference","date":"2015-02-17T17:36:13.000Z","updated":"2017-07-02T16:06:26.000Z","comments":true,"path":"2015/02/17/speaking-at-dotnetspain-conference/","link":"","permalink":"http://www.serrate.net/2015/02/17/speaking-at-dotnetspain-conference/","excerpt":"","text":"Too long without posting&#8230; Anyway, a short post to remember that I will be speaking at DotNetSpain 2015 about Complex Event Processing, Immutability and Projections with EventStore. So, if you are interested come and say hi!","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"}],"tags":[{"name":"CQRS","slug":"CQRS","permalink":"http://www.serrate.net/tags/CQRS/"},{"name":"EventStore","slug":"EventStore","permalink":"http://www.serrate.net/tags/EventStore/"}]},{"title":"Webcast about SOA, DDD & CQRS with NServiceBus","slug":"webcast-about-soa-ddd-cqrs-with-nservicebus","date":"2012-11-05T10:46:09.000Z","updated":"2017-07-02T16:04:09.000Z","comments":true,"path":"2012/11/05/webcast-about-soa-ddd-cqrs-with-nservicebus/","link":"","permalink":"http://www.serrate.net/2012/11/05/webcast-about-soa-ddd-cqrs-with-nservicebus/","excerpt":"","text":"I will be giving a Webcast tomorrow about SOA, DDD, CQRS with NServiceBus in Spanish. In this talk I will cover the DDD strategic design, bounded contexts and how to model domain logic through NServiceBus Sagas. You can see the details in the following link:","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"},{"name":"NServiceBus","slug":"Architecture/NServiceBus","permalink":"http://www.serrate.net/categories/Architecture/NServiceBus/"}],"tags":[{"name":"DDD","slug":"DDD","permalink":"http://www.serrate.net/tags/DDD/"},{"name":"SOA","slug":"SOA","permalink":"http://www.serrate.net/tags/SOA/"},{"name":"CQRS","slug":"CQRS","permalink":"http://www.serrate.net/tags/CQRS/"},{"name":"NServiceBus","slug":"NServiceBus","permalink":"http://www.serrate.net/tags/NServiceBus/"}]},{"title":"NServiceBus: DRY with unobtrusive conventions","slug":"nservicebus-dry-with-unobtrusive-conventions","date":"2012-10-16T08:20:11.000Z","updated":"2017-07-02T16:01:45.000Z","comments":true,"path":"2012/10/16/nservicebus-dry-with-unobtrusive-conventions/","link":"","permalink":"http://www.serrate.net/2012/10/16/nservicebus-dry-with-unobtrusive-conventions/","excerpt":"","text":"Many times when working with NServiceBus in unobtrusive mode you may feel that you are repeating the same conventions over and over again on all the endpoints. The IWantToRunBeforeConfiguration interface is a great help in order to embrace the DRY principle. Just define your implementation in an assembly referenced by all the endpoints: 12345678910111213public class UnobtrusiveConventions : IWantToRunBeforeConfiguration&#123; public void Init() &#123; Configure.Instance .DefiningCommandsAs(t =&gt; t.Namespace != null &amp;&amp; t.Namespace.EndsWith(\"Commands\")) .DefiningEventsAs(t =&gt;; t.Namespace != null &amp;&amp; t.Namespace.EndsWith(\"Events\")) .DefiningMessagesAs(t =&gt; t.Namespace != null &amp;&amp; t.Namespace.EndsWith(\"Messages\")); &#125;&#125; and NServiceBus will pick this class automatically for each endpoint.","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"},{"name":"NServiceBus","slug":"Architecture/NServiceBus","permalink":"http://www.serrate.net/categories/Architecture/NServiceBus/"}],"tags":[{"name":"SOA","slug":"SOA","permalink":"http://www.serrate.net/tags/SOA/"},{"name":"NServiceBus","slug":"NServiceBus","permalink":"http://www.serrate.net/tags/NServiceBus/"}]},{"title":"NServiceBus Training","slug":"nservicebus-training","date":"2012-09-11T21:28:47.000Z","updated":"2017-07-02T16:05:26.000Z","comments":true,"path":"2012/09/11/nservicebus-training/","link":"","permalink":"http://www.serrate.net/2012/09/11/nservicebus-training/","excerpt":"","text":"I will be giving the Udi Dahan&#8216;s Enterprise Development with NServiceBus 4-day course in Spain at: November 26. Barcelona December 10. Madrid More info at: http://udidahan.com/2012/10/12/training-for-this-winter/","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"}],"tags":[{"name":"DDD","slug":"DDD","permalink":"http://www.serrate.net/tags/DDD/"},{"name":"SOA","slug":"SOA","permalink":"http://www.serrate.net/tags/SOA/"},{"name":"CQRS","slug":"CQRS","permalink":"http://www.serrate.net/tags/CQRS/"},{"name":"NServiceBus","slug":"NServiceBus","permalink":"http://www.serrate.net/tags/NServiceBus/"}]},{"title":"Cassandra on Azure CentOS VM","slug":"cassandra-on-azure-centos-vm","date":"2012-08-27T09:36:02.000Z","updated":"2017-07-02T15:57:36.000Z","comments":true,"path":"2012/08/27/cassandra-on-azure-centos-vm/","link":"","permalink":"http://www.serrate.net/2012/08/27/cassandra-on-azure-centos-vm/","excerpt":"Having some fun with Cassandra lately I wanted to figure out how to setup a working environment on the new Windows Azure VM roles, so I decided to give a try and install a Cassandra cluster on CentOS. Although it’s on Ubuntu, the following article is a good guide that helped me to configure a Linux cluster: https://www.windowsazure.com/en-us/manage/linux/other-resources/how-to-run-cassandra-with-linux/ We create the 1st VM assigning a pem certificate in order to get access by ssh:","text":"Having some fun with Cassandra lately I wanted to figure out how to setup a working environment on the new Windows Azure VM roles, so I decided to give a try and install a Cassandra cluster on CentOS. Although it’s on Ubuntu, the following article is a good guide that helped me to configure a Linux cluster: https://www.windowsazure.com/en-us/manage/linux/other-resources/how-to-run-cassandra-with-linux/ We create the 1st VM assigning a pem certificate in order to get access by ssh: and then we assign the DNS name: We will connect the remaining VMs to the 1st one on the following step: Cassandra installationI’ve installed Cassandra from DataStax source because I found that packages and documentation are pretty good, but you can install from the Apache repository as well. Follow the next link for detailed instructions http://www.datastax.com/docs/1.1/install/install_rpm (just make sure to install Oracle JRE because CentOS comes with OpenJDK installed by default, and then use the alternatives command to make Oracle JRE the default one). You will need to open the 9160 TPC public port on all the VM&#8217;s in the cluster (so it will be load balanced). Also, you can install OpsCenter (a management and monitoring web UI tool) by following http://www.datastax.com/docs/opscenter/install/install_rhel. Then, you will need to open the OpsCenter port: It looks like this: And the Cassandra&#8217;s ring view: In next posts I will cover the use of Cassandra from .NET.","categories":[{"name":"NoSQL","slug":"NoSQL","permalink":"http://www.serrate.net/categories/NoSQL/"}],"tags":[{"name":"Azure","slug":"Azure","permalink":"http://www.serrate.net/tags/Azure/"},{"name":"BigData","slug":"BigData","permalink":"http://www.serrate.net/tags/BigData/"},{"name":"Cassandra","slug":"Cassandra","permalink":"http://www.serrate.net/tags/Cassandra/"},{"name":"NoSQL","slug":"NoSQL","permalink":"http://www.serrate.net/tags/NoSQL/"}]},{"title":"UI Composition for Services","slug":"ui-composition-for-services","date":"2012-08-22T07:22:49.000Z","updated":"2017-07-02T17:16:48.000Z","comments":true,"path":"2012/08/22/ui-composition-for-services/","link":"","permalink":"http://www.serrate.net/2012/08/22/ui-composition-for-services/","excerpt":"One of the most important concepts when applying either SOA or DDD is the definition of Services (or Bounded Contexts in the DDD lingo). Each of these services will be responsible for its own data and behavior and could also own the UI components of that service. Let’s see an example with the typical Ecommerce domain:","text":"One of the most important concepts when applying either SOA or DDD is the definition of Services (or Bounded Contexts in the DDD lingo). Each of these services will be responsible for its own data and behavior and could also own the UI components of that service. Let’s see an example with the typical Ecommerce domain: In this case we have two services, Sales &amp; Shipping, and each of them owns its UI components that will be rendered by the UI host. That&#8217;s the result: Composition with ASP.NET MVCIn this example, I&#8217;m using Razor Generator in order to let services to have their own MVC components in class libraries, which will be referenced by the central UI host: The use of Razor Generator is very straightforward: Install RazorGenerator from VS gallery On each class library, install RazorGenerator.Mvc from Nuget Create the folder structure following MVC conventions (Controllers, Views, etc.) Add a web.config to get intellisense for your views Change &#8220;Custom Tool&#8221; to RazorGenerator on your views in order to precompile it Then, decorate your actions as ChildActionOnly to behave like a widget: 12345678910111213141516171819202122232425262728293031323334353637383940414243public class FinishOrderController : Controller&#123; private readonly IBus bus; public FinishOrderController(IBus bus) &#123; this.bus = bus; &#125; [ChildActionOnly] public ActionResult SubmitOrCancel() &#123; ViewBag.OrderId = TheSession.OrderId; return PartialView(); &#125; [HttpPost] public ActionResult SubmitOrder() &#123; var cmd = new SubmitOrder() &#123; OrderId = TheSession.OrderId &#125;; this.bus.Send(cmd); return RedirectToAction(\"Processed\", \"Order\"); &#125; [HttpPost] public ActionResult CancelOrder() &#123; var cmd = new CancelOrder() &#123; OrderId = TheSession.OrderId &#125;; this.bus.Send(cmd); return RedirectToAction(\"Cancelled\", \"Order\"); &#125;&#125; Take a look at the sample on github and let me know!! https://github.com/mserrate/ui-composition/tree/master/UIComposition","categories":[{"name":"Architecture","slug":"Architecture","permalink":"http://www.serrate.net/categories/Architecture/"}],"tags":[{"name":"DDD","slug":"DDD","permalink":"http://www.serrate.net/tags/DDD/"},{"name":"SOA","slug":"SOA","permalink":"http://www.serrate.net/tags/SOA/"}]},{"title":"Welcome to my blog","slug":"welcome-to-my-blog","date":"2012-08-05T12:08:19.000Z","updated":"2017-07-02T15:10:50.000Z","comments":false,"path":"2012/08/05/welcome-to-my-blog/","link":"","permalink":"http://www.serrate.net/2012/08/05/welcome-to-my-blog/","excerpt":"","text":"I want to welcome you to my blog! I’d like to share with you my ramblings on various topics that I&#8217;m interested in: Distributed systems SOA DDD NoSQL Agile &#8230;and many more!! You can also visit my blog in spanish language at: http://www.serrate.es Hope to see you here!","categories":[{"name":"Blog","slug":"Blog","permalink":"http://www.serrate.net/categories/Blog/"}],"tags":[{"name":"Misc","slug":"Misc","permalink":"http://www.serrate.net/tags/Misc/"}]}]}